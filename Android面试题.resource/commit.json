{"compress":true,"commitItems":[["7a565c9c-1a65-4749-9019-42e8f926c738",1555040793672,"",[[1555040743158,["poul@pouldeMBP.lan",[[1,0,"# Android面试题\n\n\n\n"]],[0,0],[15,15]]],[1555040805159,["poul@pouldeMBP.lan",[[-1,15,"\n"],[1,16,"#"]],[15,15],[16,16]]],[1555040811114,["poul@pouldeMBP.lan",[[1,16," Activity的启动流程"]],[16,16],[30,30]]],[1555040811736,["poul@pouldeMBP.lan",[[1,30,"\n\n"]],[30,30],[31,31]]],[1555040812057,["poul@pouldeMBP.lan",[[1,32,"\n"]],[31,31],[32,32]]],[1555040812924,["poul@pouldeMBP.lan",[[-1,32,"\n"],[1,33,"#"]],[32,32],[33,33]]],[1555040823155,["poul@pouldeMBP.lan",[[1,33," View的绘制流程"]],[33,33],[43,43]]],[1555040823660,["poul@pouldeMBP.lan",[[1,43,"\n\n"]],[43,43],[44,44]]],[1555040824095,["poul@pouldeMBP.lan",[[1,45,"\n"]],[44,44],[45,45]]],[1555040824752,["poul@pouldeMBP.lan",[[-1,45,"\n"],[1,46,"#"]],[45,45],[46,46]]],[1555040830653,["poul@pouldeMBP.lan",[[1,46," Handler消息机制"]],[46,46],[58,58]]],[1555040831132,["poul@pouldeMBP.lan",[[1,58,"\n\n"]],[58,58],[59,59]]],[1555040831581,["poul@pouldeMBP.lan",[[1,60,"\n"]],[59,59],[60,60]]],[1555040832271,["poul@pouldeMBP.lan",[[-1,60,"\n"],[1,61,"#"]],[60,60],[61,61]]],[1555040843022,["poul@pouldeMBP.lan",[[1,61," AsyncTask远吗"]],[61,61],[73,73]]],[1555040843972,["poul@pouldeMBP.lan",[[-1,71,"远吗"]],[73,73],[71,71]]],[1555040846550,["poul@pouldeMBP.lan",[[1,71,"源码分析"]],[71,71],[75,75]]],[1555040847030,["poul@pouldeMBP.lan",[[1,75,"\n\n"]],[75,75],[76,76]]],[1555040847274,["poul@pouldeMBP.lan",[[1,77,"\n"]],[76,76],[77,77]]],[1555040860990,["poul@pouldeMBP.lan",[[-1,77,"\n"],[1,78,"#"]],[77,77],[78,78]]],[1555040874931,["poul@pouldeMBP.lan",[[1,78," HashMap原理，Hash膨胀"]],[78,78],[95,95]]],[1555040875583,["poul@pouldeMBP.lan",[[-1,93,"膨胀"]],[95,95],[93,93]]],[1555040881387,["poul@pouldeMBP.lan",[[1,93,"碰撞，"]],[93,93],[96,96]]],[1555040883418,["poul@pouldeMBP.lan",[[-1,95,"，"]],[96,96],[95,95]]],[1555040888165,["poul@pouldeMBP.lan",[[1,95,"，自动扩容"]],[95,95],[100,100]]],[1555040889073,["poul@pouldeMBP.lan",[[1,100,"\n\n"]],[100,100],[101,101]]],[1555040889446,["poul@pouldeMBP.lan",[[1,102,"\n"]],[101,101],[102,102]]],[1555040890953,["poul@pouldeMBP.lan",[[-1,102,"\n"],[1,103,"#"]],[102,102],[103,103]]],[1555040891335,["poul@pouldeMBP.lan",[[1,103," "]],[103,103],[104,104]]],[1555040941357,["poul@pouldeMBP.lan",[[1,104,"Retrofit源码分析"]],[104,104],[116,116]]],[1555040971566,["poul@pouldeMBP.lan",[[1,116,"\n\n"]],[116,116],[117,117]]],[1555040971720,["poul@pouldeMBP.lan",[[1,118,"\n"]],[117,117],[118,118]]],[1555040972643,["poul@pouldeMBP.lan",[[-1,118,"\n"],[1,119,"#"]],[118,118],[119,119]]],[1555040973479,["poul@pouldeMBP.lan",[[1,119," "]],[119,119],[120,120]]],[1555040974347,["poul@pouldeMBP.lan",[[1,120,"requestLayout，invalidate，postInvalidate区别与联系"]],[120,120],[164,164]]],[1555040985526,["poul@pouldeMBP.lan",[[1,164,"\n\n"]],[164,164],[165,165]]],[1555040985853,["poul@pouldeMBP.lan",[[1,166,"\n"]],[165,165],[166,166]]],[1555040986572,["poul@pouldeMBP.lan",[[-1,166,"\n"],[1,167,"#"]],[166,166],[167,167]]],[1555040987618,["poul@pouldeMBP.lan",[[1,167," Glide缓存源码，加载原理"]],[167,167],[182,182]]],[1555040997516,["poul@pouldeMBP.lan",[[1,15,"\n"]],[14,14],[15,15]]],[1555040997726,["poul@pouldeMBP.lan",[[1,16,"\n"]],[15,15],[16,16]]],[1555041001157,["poul@pouldeMBP.lan",[[1,15,"# **ActivityThread工作原理**"]],[15,15],[39,39]]],[1555041002961,["poul@pouldeMBP.lan",[[-1,37,"**"]],[39,39],[37,37]]],[1555041006838,["poul@pouldeMBP.lan",[[-1,17,"**"]],[19,19],[17,17]]],[1555041012859,["poul@pouldeMBP.lan",[[1,204,"\n\n"]],[204,204],[205,205]]],[1555041013020,["poul@pouldeMBP.lan",[[1,206,"\n"]],[205,205],[206,206]]],[1555041013849,["poul@pouldeMBP.lan",[[-1,206,"\n"],[1,207,"#"]],[206,206],[207,207]]],[1555041020323,["poul@pouldeMBP.lan",[[1,207," 常用设计模式已经"]],[207,207],[216,216]]],[1555041021428,["poul@pouldeMBP.lan",[[-1,214,"已经"]],[216,216],[214,214]]],[1555041024544,["poul@pouldeMBP.lan",[[1,214,"以及使用场景"]],[214,214],[220,220]]],[1555041030818,["poul@pouldeMBP.lan",[[1,220,"\n\n"]],[220,220],[221,221]]],[1555041031087,["poul@pouldeMBP.lan",[[1,222,"\n"]],[221,221],[222,222]]],[1555041031822,["poul@pouldeMBP.lan",[[-1,222,"\n"],[1,223,"#"]],[222,222],[223,223]]],[1555041033398,["poul@pouldeMBP.lan",[[1,223," 县城"]],[223,223],[226,226]]],[1555041034122,["poul@pouldeMBP.lan",[[-1,223," 县城"]],[226,226],[223,223]]],[1555041034461,["poul@pouldeMBP.lan",[[-1,222,"#"],[1,223,"\n"]],[223,223],[222,222]]],[1555041034790,["poul@pouldeMBP.lan",[[-1,222,"\n"]],[222,222],[221,221]]],[1555041037068,["poul@pouldeMBP.lan",[[1,67,"\n"]],[65,65],[66,66]]],[1555041037217,["poul@pouldeMBP.lan",[[1,68,"\n"]],[66,66],[67,67]]],[1555041042295,["poul@pouldeMBP.lan",[[1,67,"# 多线程"]],[67,67],[72,72]]],[1555041054749,["poul@pouldeMBP.lan",[[1,15,"\n"]],[14,14],[15,15]]],[1555041054891,["poul@pouldeMBP.lan",[[1,16,"\n"]],[15,15],[16,16]]],[1555041059366,["poul@pouldeMBP.lan",[[1,15,"# Binder机制"]],[15,15],[25,25]]],[1555041071199,["poul@pouldeMBP.lan",[[-1,159,"# requestLayout，invalidate，postInvalidate区别与联系"]],[159,205],[159,159]]],[1555041072117,["poul@pouldeMBP.lan",[[-1,160,"\n"]],[159,159],[158,158]]],[1555041072371,["poul@pouldeMBP.lan",[[-1,159,"\n"]],[158,158],[157,157]]],[1555041074544,["poul@pouldeMBP.lan",[[1,79,"\n"]],[77,77],[78,78]]],[1555041074686,["poul@pouldeMBP.lan",[[1,80,"\n"]],[78,78],[79,79]]],[1555041075184,["poul@pouldeMBP.lan",[[1,79,"# requestLayout，invalidate，postInvalidate区别与联系"]],[79,79],[125,125]]],[1555041077450,["poul@pouldeMBP.lan",[[1,79,"\n"]],[77,77],[78,78]]],[1555041078259,["poul@pouldeMBP.lan",[[1,80,"\n"]],[78,78],[79,79]]],[1555041079215,["poul@pouldeMBP.lan",[[1,79,"3"]],[79,79],[80,80]]],[1555041079703,["poul@pouldeMBP.lan",[[-1,79,"3"]],[80,80],[79,79]]],[1555041085068,["poul@pouldeMBP.lan",[[1,79,"# Android动画"]],[79,79],[90,90]]],[1555041101984,["poul@pouldeMBP.lan",[[1,254,"\n"]],[252,252],[253,253]]],[1555041102167,["poul@pouldeMBP.lan",[[1,255,"\n"]],[253,253],[254,254]]],[1555041107130,["poul@pouldeMBP.lan",[[1,254,"# 常用排序算法"]],[254,254],[262,262]]],[1555041107517,["poul@pouldeMBP.lan",[[1,264,"\n"]],[262,262],[263,263]]],[1555041107927,["poul@pouldeMBP.lan",[[1,265,"\n"]],[263,263],[264,264]]],[1555041116525,["poul@pouldeMBP.lan",[[1,264,"# 常用加解密算法"]],[264,264],[273,273]]],[1555041140980,["poul@pouldeMBP.lan",[[1,275,"\n"]],[273,273],[274,274]]],[1555041141167,["poul@pouldeMBP.lan",[[1,276,"\n"]],[274,274],[275,275]]],[1555041147185,["poul@pouldeMBP.lan",[[1,275,"# 图片的二次擦痒"]],[275,275],[284,284]]],[1555041147793,["poul@pouldeMBP.lan",[[-1,282,"擦痒"]],[284,284],[282,282]]],[1555041149207,["poul@pouldeMBP.lan",[[1,282,"采样"]],[282,282],[284,284]]],[1555041149764,["poul@pouldeMBP.lan",[[1,286,"\n"]],[284,284],[285,285]]],[1555041149947,["poul@pouldeMBP.lan",[[1,287,"\n"]],[285,285],[286,286]]],[1555041155734,["poul@pouldeMBP.lan",[[1,286,"#"]],[286,286],[287,287]]],[1555041156244,["poul@pouldeMBP.lan",[[-1,286,"#"]],[287,287],[286,286]]],[1555041156611,["poul@pouldeMBP.lan",[[-1,287,"\n"]],[286,286],[285,285]]],[1555041236589,["poul@pouldeMBP.lan",[[1,79,"\n"]],[77,77],[78,78]]],[1555041237157,["poul@pouldeMBP.lan",[[1,80,"\n"]],[78,78],[79,79]]],[1555041247617,["poul@pouldeMBP.lan",[[1,79,"# SurfaceView和View的区别"]],[79,79],[100,100]]],[1555041276811,["poul@pouldeMBP.lan",[[1,170,"\n"]],[168,168],[169,169]]],[1555041276955,["poul@pouldeMBP.lan",[[1,171,"\n"]],[169,169],[170,170]]],[1555041277379,["poul@pouldeMBP.lan",[[1,170,"Synchronized原理"]],[170,170],[184,184]]],[1555041280092,["poul@pouldeMBP.lan",[[1,170,"# "]],[170,170],[172,172]]],[1555041290821,["poul@pouldeMBP.lan",[[1,188,"\n"]],[186,186],[187,187]]],[1555041290965,["poul@pouldeMBP.lan",[[1,189,"\n"]],[187,187],[188,188]]],[1555041293103,["poul@pouldeMBP.lan",[[1,188,"# Volatile实现原理"]],[188,188],[202,202]]],[1555041407514,["poul@pouldeMBP.lan",[[-1,343,"\n"],[1,344,"#"]],[343,343],[344,344]]],[1555041408703,["poul@pouldeMBP.lan",[[1,344," **Serializable ****和****Parcelable ****的区别**"]],[344,344],[389,389]]],[1555041411496,["poul@pouldeMBP.lan",[[-1,345,"**"]],[347,347],[345,345]]],[1555041413809,["poul@pouldeMBP.lan",[[-1,358,"****"]],[362,362],[358,358]]],[1555041416218,["poul@pouldeMBP.lan",[[-1,359,"****"]],[363,363],[359,359]]],[1555041419274,["poul@pouldeMBP.lan",[[-1,369," ****"]],[369,374],[369,369]]],[1555041420214,["poul@pouldeMBP.lan",[[-1,372,"**"]],[374,374],[372,372]]],[1555041546176,["poul@pouldeMBP.lan",[[1,372,"\n\n"]],[372,372],[373,373]]],[1555041546325,["poul@pouldeMBP.lan",[[1,374,"\n"]],[373,373],[374,374]]],[1555041547432,["poul@pouldeMBP.lan",[[-1,374,"\n"]],[374,374],[373,373]]],[1555041548248,["poul@pouldeMBP.lan",[[1,374,"\n"]],[373,373],[374,374]]],[1555041549121,["poul@pouldeMBP.lan",[[-1,357," "],[1,358," "],[-1,374,"\n"],[1,375,"#"]],[374,374],[375,375]]],[1555041552700,["poul@pouldeMBP.lan",[[1,375," jvm垃圾 "]],[375,375],[382,382]]],[1555041553537,["poul@pouldeMBP.lan",[[-1,381," "]],[382,382],[381,381]]],[1555041556044,["poul@pouldeMBP.lan",[[1,381,"回收机制"]],[381,381],[385,385]]],[1555041557153,["poul@pouldeMBP.lan",[[1,385,"\n\n"]],[385,385],[386,386]]],[1555041557323,["poul@pouldeMBP.lan",[[1,387,"\n"]],[386,386],[387,387]]],[1555041783764,["poul@pouldeMBP.lan",[[1,79,"\n"]],[77,77],[78,78]]],[1555041783921,["poul@pouldeMBP.lan",[[1,80,"\n"]],[78,78],[79,79]]],[1555041791017,["poul@pouldeMBP.lan",[[1,79,"# 事件分发"]],[79,79],[85,85]]],[1555041798937,["poul@pouldeMBP.lan",[[1,81,"View和ViewGroup"]],[81,81],[95,95]]],[1555041829275,["poul@pouldeMBP.lan",[[-1,409,"\n"],[1,410,"#"]],[409,409],[410,410]]],[1555041832109,["poul@pouldeMBP.lan",[[1,410," ANR信息"]],[410,410],[416,416]]],[1555041833020,["poul@pouldeMBP.lan",[[1,416,"收集"]],[416,416],[418,418]]],[1555041866269,["poul@pouldeMBP.lan",[[1,66,"\n"]],[64,64],[65,65]]],[1555041866683,["poul@pouldeMBP.lan",[[1,67,"\n"]],[65,65],[66,66]]],[1555041873246,["poul@pouldeMBP.lan",[[1,66,"# Android类加载器"]],[66,66],[79,79]]],[1555041907305,["poul@pouldeMBP.lan",[[1,94,"\n"]],[92,92],[93,93]]],[1555041907468,["poul@pouldeMBP.lan",[[1,95,"\n"]],[93,93],[94,94]]],[1555041909523,["poul@pouldeMBP.lan",[[1,94,"# ### MeasureSpec"]],[94,94],[111,111]]],[1555041913448,["poul@pouldeMBP.lan",[[-1,96,"### "]],[100,100],[96,96]]],[1555041916024,["poul@pouldeMBP.lan",[[1,95,"#"]],[95,95],[96,96]]],[1555041930344,["poul@pouldeMBP.lan",[[1,108,"为何高两位代表测量模式，"]],[108,108],[120,120]]],[1555041932590,["poul@pouldeMBP.lan",[[-1,119,"，"]],[120,120],[119,119]]],[1555041951749,["poul@pouldeMBP.lan",[[1,119,"，而不拆成两个参数进行传递？"]],[119,119],[133,133]]],[1555041977572,["poul@pouldeMBP.lan",[[1,474,"\n\n"]],[474,474],[475,475]]],[1555041977710,["poul@pouldeMBP.lan",[[1,476,"\n"]],[475,475],[476,476]]],[1555041978503,["poul@pouldeMBP.lan",[[-1,476,"\n"],[1,477,"#"]],[476,476],[477,477]]],[1555041981950,["poul@pouldeMBP.lan",[[1,477," RecycleView"]],[477,477],[489,489]]],[1555041985961,["poul@pouldeMBP.lan",[[1,485,"r"]],[485,485],[486,486]]],[1555042004761,["poul@pouldeMBP.lan",[[1,490,"和ListView详解，拒不花心"]],[490,490],[506,506]]],[1555042005653,["poul@pouldeMBP.lan",[[-1,502,"拒不花心"]],[506,506],[502,502]]],[1555042009413,["poul@pouldeMBP.lan",[[1,502,"局部刷线"]],[502,502],[506,506]]],[1555042015528,["poul@pouldeMBP.lan",[[1,506,"\n\n"]],[506,506],[507,507]]],[1555042015695,["poul@pouldeMBP.lan",[[1,508,"\n"]],[507,507],[508,508]]],[1555042016393,["poul@pouldeMBP.lan",[[-1,508,"\n"],[1,509,"#"]],[508,508],[509,509]]],[1555042026669,["poul@pouldeMBP.lan",[[1,509," Android两种虚拟机的联系与区别"]],[509,509],[528,528]]],[1555042037767,["poul@pouldeMBP.lan",[[1,528,"\n\n"]],[528,528],[529,529]]],[1555042037921,["poul@pouldeMBP.lan",[[1,530,"\n"]],[529,529],[530,530]]],[1555042038812,["poul@pouldeMBP.lan",[[-1,530,"\n"],[1,531,"#"]],[530,530],[531,531]]],[1555042043160,["poul@pouldeMBP.lan",[[1,531," APK打包流程"]],[531,531],[539,539]]],[1555042048404,["poul@pouldeMBP.lan",[[1,539,"\n\n"]],[539,539],[540,540]]],[1555042048808,["poul@pouldeMBP.lan",[[1,541,"\n"]],[540,540],[541,541]]],[1555042049497,["poul@pouldeMBP.lan",[[-1,541,"\n"],[1,542,"#"]],[541,541],[542,542]]],[1555042053212,["poul@pouldeMBP.lan",[[1,542," APK安装流程"]],[542,542],[550,550]]],[1555042053497,["poul@pouldeMBP.lan",[[1,550,"\n\n"]],[550,550],[551,551]]],[1555042053717,["poul@pouldeMBP.lan",[[1,552,"\n"]],[551,551],[552,552]]],[1555042055753,["poul@pouldeMBP.lan",[[-1,552,"\n"],[1,553,"#"]],[552,552],[553,553]]],[1555042059206,["poul@pouldeMBP.lan",[[1,553," APK瘦身"]],[553,553],[559,559]]],[1555042085723,["poul@pouldeMBP.lan",[[1,559,"\n\n"]],[559,559],[560,560]]],[1555042085881,["poul@pouldeMBP.lan",[[1,561,"\n"]],[560,560],[561,561]]],[1555042086891,["poul@pouldeMBP.lan",[[-1,561,"\n"],[1,562,"#"]],[561,561],[562,562]]],[1555042087193,["poul@pouldeMBP.lan",[[1,562," "]],[562,562],[563,563]]],[1555042088746,["poul@pouldeMBP.lan",[[-1,562," "]],[563,563],[562,562]]],[1555042089072,["poul@pouldeMBP.lan",[[-1,561,"#"],[1,562,"\n"]],[562,562],[561,561]]],[1555042089482,["poul@pouldeMBP.lan",[[-1,561,"\n"]],[561,561],[560,560]]],[1555042256301,["poul@pouldeMBP.lan",[[1,248,"\n"]],[246,246],[247,247]]],[1555042256429,["poul@pouldeMBP.lan",[[1,249,"\n"]],[247,247],[248,248]]],[1555042257759,["poul@pouldeMBP.lan",[[1,248,"# xa"]],[248,248],[252,252]]],[1555042258343,["poul@pouldeMBP.lan",[[-1,250,"xa"]],[252,252],[250,250]]],[1555042259055,["poul@pouldeMBP.lan",[[1,250,"xian"]],[250,250],[254,254]]],[1555042259829,["poul@pouldeMBP.lan",[[-1,250,"xian"]],[254,254],[250,250]]],[1555042261708,["poul@pouldeMBP.lan",[[1,250,"线程池"]],[250,250],[253,253]]],[1555042272476,["poul@pouldeMBP.lan",[[1,255,"\n"]],[253,253],[254,254]]],[1555042272898,["poul@pouldeMBP.lan",[[1,256,"\n"]],[254,254],[255,255]]],[1555042278110,["poul@pouldeMBP.lan",[[1,255,"# ThreadLocal"]],[255,255],[268,268]]],[1555042289103,["poul@pouldeMBP.lan",[[1,583,"\n"]],[581,581],[582,582]]],[1555042289253,["poul@pouldeMBP.lan",[[1,584,"\n"]],[582,582],[583,583]]],[1555042297621,["poul@pouldeMBP.lan",[[1,583,"# 软引用、弱引用、"]],[583,583],[593,593]]],[1555042299301,["poul@pouldeMBP.lan",[[-1,585,"软引用、弱引用、"]],[593,593],[585,585]]],[1555042301076,["poul@pouldeMBP.lan",[[1,585,"医用"]],[585,585],[587,587]]],[1555042301961,["poul@pouldeMBP.lan",[[-1,585,"医用"]],[587,587],[585,585]]],[1555042306231,["poul@pouldeMBP.lan",[[1,585,"引用方式的"]],[585,585],[590,590]]],[1555042310300,["poul@pouldeMBP.lan",[[-1,587,"方式的"]],[590,590],[587,587]]],[1555042311521,["poul@pouldeMBP.lan",[[1,587,"类型"]],[587,587],[589,589]]],[1555042311963,["poul@pouldeMBP.lan",[[1,591,"\n"]],[589,589],[590,590]]],[1555042312181,["poul@pouldeMBP.lan",[[1,592,"\n"]],[590,590],[591,591]]],[1555042312708,["poul@pouldeMBP.lan",[[-1,592,"\n"]],[591,591],[590,590]]],[1555042316122,["poul@pouldeMBP.lan",[[1,590,"- 软"]],[590,590],[593,593]]],[1555042317096,["poul@pouldeMBP.lan",[[1,594,"- \n"]],[593,593],[596,596]]],[1555042319160,["poul@pouldeMBP.lan",[[1,596,"弱"]],[596,596],[597,597]]],[1555042319543,["poul@pouldeMBP.lan",[[1,598,"- \n"]],[597,597],[600,600]]],[1555042324676,["poul@pouldeMBP.lan",[[-1,598,"- "]],[600,600],[598,598]]],[1555042325305,["poul@pouldeMBP.lan",[[-1,599,"\n"]],[598,598],[597,597]]],[1555042327036,["poul@pouldeMBP.lan",[[1,590,"\n"]],[589,589],[590,590]]],[1555042329347,["poul@pouldeMBP.lan",[[1,590,"- 强"]],[590,590],[593,593]]],[1555042354141,["poul@pouldeMBP.lan",[[1,603,"\n"]],[602,602],[603,603]]],[1555042355096,["poul@pouldeMBP.lan",[[-1,603,"\n"],[1,604,"#"]],[603,603],[604,604]]],[1555042360660,["poul@pouldeMBP.lan",[[1,604," Fragment兰家镇"]],[604,604],[616,616]]],[1555042361645,["poul@pouldeMBP.lan",[[-1,613,"兰家镇"]],[616,616],[613,613]]],[1555042363359,["poul@pouldeMBP.lan",[[1,613,"懒加载"]],[613,613],[616,616]]],[1555042363850,["poul@pouldeMBP.lan",[[1,616,"\n\n"]],[616,616],[617,617]]],[1555042373553,["poul@pouldeMBP.lan",[[1,616,"，ViewPager缓存机制"]],[616,616],[630,630]]],[1555042443134,["poul@pouldeMBP.lan",[[1,632,"\n"]],[630,630],[631,631]]],[1555042443302,["poul@pouldeMBP.lan",[[1,633,"\n"]],[631,631],[632,632]]],[1555042449930,["poul@pouldeMBP.lan",[[1,632,"# Java中发射和"]],[632,632],[642,642]]],[1555042450551,["poul@pouldeMBP.lan",[[-1,639,"发射和"]],[642,642],[639,639]]],[1555042453377,["poul@pouldeMBP.lan",[[1,639,"反射和主机"]],[639,639],[644,644]]],[1555042456195,["poul@pouldeMBP.lan",[[-1,641,"和主机"]],[644,644],[641,641]]],[1555042460309,["poul@pouldeMBP.lan",[[1,641,"、注解的理解"]],[641,641],[647,647]]],[1555042926980,["poul@pouldeMBP.lan",[[1,649,"\n"]],[647,647],[648,648]]],[1555042927150,["poul@pouldeMBP.lan",[[1,650,"\n"]],[648,648],[649,649]]],[1555042932733,["poul@pouldeMBP.lan",[[1,649,"# LruCache"]],[649,649],[659,659]]],[1555043143110,["poul@pouldeMBP.lan",[[1,661,"\n"]],[659,659],[660,660]]],[1555043143298,["poul@pouldeMBP.lan",[[1,662,"\n"]],[660,660],[661,661]]],[1555043145152,["poul@pouldeMBP.lan",[[1,661,"# xiao"]],[661,661],[667,667]]],[1555043145955,["poul@pouldeMBP.lan",[[-1,663,"xiao"]],[667,667],[663,663]]],[1555043149975,["poul@pouldeMBP.lan",[[1,663,"小程序实现原理"]],[663,663],[670,670]]],[1555043588163,["poul@pouldeMBP.lan",[[1,27,"\n"]],[25,25],[26,26]]],[1555043609423,["poul@pouldeMBP.lan",[[1,16,"#"]],[16,16],[17,17]]],[1555043613019,["poul@pouldeMBP.lan",[[1,30,"#"]],[30,30],[31,31]]],[1555043615626,["poul@pouldeMBP.lan",[[1,53,"#"]],[53,53],[54,54]]],[1555043617225,["poul@pouldeMBP.lan",[[1,71,"#"]],[71,71],[72,72]]],[1555043618764,["poul@pouldeMBP.lan",[[1,87,"#"]],[87,87],[88,88]]],[1555043621295,["poul@pouldeMBP.lan",[[1,102,"#"]],[102,102],[103,103]]],[1555043623403,["poul@pouldeMBP.lan",[[1,143,"#"]],[143,143],[144,144]]],[1555043625037,["poul@pouldeMBP.lan",[[1,166,"#"]],[166,166],[167,167]]],[1555043626424,["poul@pouldeMBP.lan",[[1,190,"#"]],[190,190],[191,191]]],[1555043627963,["poul@pouldeMBP.lan",[[1,204,"#"]],[204,204],[205,205]]],[1555043629941,["poul@pouldeMBP.lan",[[1,253,"#"]],[253,253],[254,254]]],[1555043631975,["poul@pouldeMBP.lan",[[1,261,"#"]],[261,261],[262,262]]],[1555043633519,["poul@pouldeMBP.lan",[[1,269,"#"]],[269,269],[270,270]]],[1555043635035,["poul@pouldeMBP.lan",[[1,285,"#"]],[285,285],[286,286]]],[1555043637031,["poul@pouldeMBP.lan",[[1,304,"#"]],[304,304],[305,305]]],[1555043638247,["poul@pouldeMBP.lan",[[1,321,"#"]],[321,321],[322,322]]],[1555043641091,["poul@pouldeMBP.lan",[[1,337,"#"]],[337,337],[338,338]]],[1555043643107,["poul@pouldeMBP.lan",[[1,355,"#"]],[355,355],[356,356]]],[1555043644537,["poul@pouldeMBP.lan",[[1,381,"#"]],[381,381],[382,382]]],[1555043645842,["poul@pouldeMBP.lan",[[1,398,"#"]],[398,398],[399,399]]],[1555043647105,["poul@pouldeMBP.lan",[[1,417,"#"]],[417,417],[418,418]]],[1555043649131,["poul@pouldeMBP.lan",[[1,434,"#"]],[434,434],[435,435]]],[1555043651940,["poul@pouldeMBP.lan",[[1,445,"#"]],[445,445],[446,446]]],[1555043653473,["poul@pouldeMBP.lan",[[1,457,"#"]],[457,457],[458,458]]],[1555043654570,["poul@pouldeMBP.lan",[[1,469,"#"]],[469,469],[470,470]]],[1555043656570,["poul@pouldeMBP.lan",[[1,501,"#"]],[501,501],[502,502]]],[1555043657669,["poul@pouldeMBP.lan",[[1,515,"#"]],[515,515],[516,516]]],[1555043658836,["poul@pouldeMBP.lan",[[1,527,"#"]],[527,527],[528,528]]],[1555043660068,["poul@pouldeMBP.lan",[[1,560,"#"]],[560,560],[561,561]]],[1555043661345,["poul@pouldeMBP.lan",[[1,583,"#"]],[583,583],[584,584]]],[1555043664558,["poul@pouldeMBP.lan",[[1,595,"#"]],[595,595],[596,596]]],[1555043665452,["poul@pouldeMBP.lan",[[1,607,"#"]],[607,607],[608,608]]],[1555043666556,["poul@pouldeMBP.lan",[[1,617,"#"]],[617,617],[618,618]]],[1555043667726,["poul@pouldeMBP.lan",[[1,638,"#"]],[638,638],[639,639]]],[1555043671109,["poul@pouldeMBP.lan",[[1,668,"#"]],[668,668],[669,669]]],[1555043672419,["poul@pouldeMBP.lan",[[1,686,"#"]],[686,686],[687,687]]],[1555043673376,["poul@pouldeMBP.lan",[[1,699,"#"]],[699,699],[700,700]]],[1555043679140,["poul@pouldeMBP.lan",[[1,27,"  "]],[27,27],[29,29]]],[1555043680087,["poul@pouldeMBP.lan",[[-1,28," "]],[29,29],[28,28]]],[1555045964124,["poul@pouldeMBP.lan",[[1,28,"什么是Binder"]],[28,28],[37,37]]],[1555045969841,["poul@pouldeMBP.lan",[[1,38," \n"]],[37,37],[39,39]]],[1555045970357,["poul@pouldeMBP.lan",[[1,39,"![å®ä¹](http://upload-images.jianshu.io/upload_images/944365-45db4df339348b9b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)"]],[39,39],[174,174]]],[1555045995404,["poul@pouldeMBP.lan",[[-1,38," ![å®ä¹](http://upload-images.jianshu.io/upload_images/944365-45db4df339348b9b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)"]],[38,174],[38,38]]],[1555046043102,["poul@pouldeMBP.lan",[[1,38,"![Binder是什么？]($resource/Binder%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F.png)"]],[38,38],[110,110]]],[1555046130815,["poul@pouldeMBP.lan",[[-1,38,"![Binder是什么？]($resource/Binder%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F.png)"]],[38,109],[38,38]]],[1555046288008,["poul@pouldeMBP.lan",[[1,38,"![Binder是什么]($resource/Binder%E6%98%AF%E4%BB%80%E4%B9%88.png)"]],[38,39],[100,100]]],[1555046310566,["poul@pouldeMBP.lan",[[1,101,"\n"]],[99,99],[100,100]]],[1555046318224,["poul@pouldeMBP.lan",[[1,100,"- 从模型"]],[100,100],[105,105]]],[1555046320489,["poul@pouldeMBP.lan",[[-1,103,"模型"]],[105,105],[103,103]]],[1555046327369,["poul@pouldeMBP.lan",[[1,103,"机制、模型角度讲"]],[103,103],[111,111]]],[1555046327879,["poul@pouldeMBP.lan",[[1,112,"- \n"]],[111,111],[114,114]]],[1555046328302,["poul@pouldeMBP.lan",[[1,112,"  "]],[114,114],[116,116]]],[1555046357469,["poul@pouldeMBP.lan",[[1,116,"Binder是一种Android中实现跨进程通信（IPC）的方式"]],[116,116],[148,148]]],[1555046357762,["poul@pouldeMBP.lan",[[1,149,"  - \n"]],[148,148],[153,153]]],[1555046370608,["poul@pouldeMBP.lan",[[1,153,"在Android中实现"]],[153,153],[164,164]]],[1555046375256,["poul@pouldeMBP.lan",[[1,164,"跨基础"]],[164,164],[167,167]]],[1555046377597,["poul@pouldeMBP.lan",[[-1,162,"实现跨基础"]],[167,167],[162,162]]],[1555046382061,["poul@pouldeMBP.lan",[[1,162,"实现跨进程通信"]],[162,162],[169,169]]],[1555046384364,["poul@pouldeMBP.lan",[[1,170,"  - \n"]],[169,169],[174,174]]],[1555046386660,["poul@pouldeMBP.lan",[[-1,170,"  "]],[172,172],[170,170]]],[1555046399587,["poul@pouldeMBP.lan",[[1,172,"从模型结构、组成来讲"]],[172,172],[182,182]]],[1555046400238,["poul@pouldeMBP.lan",[[-1,180,"来讲"]],[182,182],[180,180]]],[1555046401298,["poul@pouldeMBP.lan",[[1,180,"讲"]],[180,180],[181,181]]],[1555046402552,["poul@pouldeMBP.lan",[[1,182,"- \n"]],[181,181],[184,184]]],[1555046402990,["poul@pouldeMBP.lan",[[1,182,"  "]],[184,184],[186,186]]],[1555046418526,["poul@pouldeMBP.lan",[[1,186,"Binder是一种虚拟的物理设备驱动。"]],[186,186],[205,205]]],[1555046418906,["poul@pouldeMBP.lan",[[-1,204,"。"]],[205,205],[204,204]]],[1555046429183,["poul@pouldeMBP.lan",[[1,204,"，即Binder是"]],[204,204],[213,213]]],[1555046431156,["poul@pouldeMBP.lan",[[-1,212,"是"]],[213,213],[212,212]]],[1555046432457,["poul@pouldeMBP.lan",[[1,212,"驱动"]],[212,212],[214,214]]],[1555046441841,["poul@pouldeMBP.lan",[[1,148,"，即Binder机制模型"]],[148,148],[160,160]]],[1555046443904,["poul@pouldeMBP.lan",[[1,227,"  - \n"]],[226,226],[231,231]]],[1555046447532,["poul@pouldeMBP.lan",[[1,231,"链接"]],[231,231],[233,233]]],[1555046449070,["poul@pouldeMBP.lan",[[-1,231,"链接"]],[233,233],[231,231]]],[1555046456513,["poul@pouldeMBP.lan",[[1,231,"连接Service进场"]],[231,231],[242,242]]],[1555046457038,["poul@pouldeMBP.lan",[[-1,241,"场"]],[242,242],[241,241]]],[1555046459975,["poul@pouldeMBP.lan",[[1,241,"程，"]],[241,241],[243,243]]],[1555046460340,["poul@pouldeMBP.lan",[[-1,242,"，"]],[243,243],[242,242]]],[1555046474772,["poul@pouldeMBP.lan",[[1,242,"、Client进程和ServiceManager进程"]],[242,242],[268,268]]],[1555046475233,["poul@pouldeMBP.lan",[[1,269,"  - \n"]],[268,268],[273,273]]],[1555046477273,["poul@pouldeMBP.lan",[[-1,269,"  "]],[271,271],[269,269]]],[1555046489215,["poul@pouldeMBP.lan",[[1,271,"从Android角度"]],[271,271],[281,281]]],[1555046491360,["poul@pouldeMBP.lan",[[-1,279,"角度"]],[281,281],[279,279]]],[1555046493735,["poul@pouldeMBP.lan",[[1,279,"代码的角度"]],[279,279],[284,284]]],[1555046499355,["poul@pouldeMBP.lan",[[1,282,"实现"]],[282,282],[284,284]]],[1555046501311,["poul@pouldeMBP.lan",[[1,286,"讲"]],[286,286],[287,287]]],[1555046501700,["poul@pouldeMBP.lan",[[1,288,"- \n"]],[287,287],[290,290]]],[1555046503757,["poul@pouldeMBP.lan",[[1,288,"  "]],[290,290],[292,292]]],[1555046518639,["poul@pouldeMBP.lan",[[1,292,"Binder是个类，实现了IBinder借口"]],[292,292],[314,314]]],[1555046518932,["poul@pouldeMBP.lan",[[1,315,"  - \n"]],[314,314],[319,319]]],[1555046521141,["poul@pouldeMBP.lan",[[-1,315,"  - "]],[319,319],[315,315]]],[1555046521363,["poul@pouldeMBP.lan",[[-1,316,"\n"]],[315,315],[314,314]]],[1555046521969,["poul@pouldeMBP.lan",[[-1,312,"借口"]],[314,314],[312,312]]],[1555046523586,["poul@pouldeMBP.lan",[[1,312,"接口"]],[312,312],[314,314]]],[1555046524032,["poul@pouldeMBP.lan",[[1,315,"  - \n"]],[314,314],[319,319]]],[1555046531255,["poul@pouldeMBP.lan",[[1,314,"，即Binder类"]],[314,314],[323,323]]],[1555046536596,["poul@pouldeMBP.lan",[[1,328,"讲"]],[328,328],[329,329]]],[1555046536918,["poul@pouldeMBP.lan",[[-1,328,"讲"]],[329,329],[328,328]]],[1555046550929,["poul@pouldeMBP.lan",[[1,328,"将Binder机制模型以代码的形式具体"]],[328,328],[347,347]]],[1555046551571,["poul@pouldeMBP.lan",[[1,347,"在"]],[347,347],[348,348]]],[1555046553148,["poul@pouldeMBP.lan",[[-1,347,"在"]],[348,348],[347,347]]],[1555046557039,["poul@pouldeMBP.lan",[[1,347,"是现在Android中"]],[347,347],[358,358]]],[1555046697023,["poul@pouldeMBP.lan",[[-1,38,"![Binder是什么]($resource/Binder%E6%98%AF%E4%BB%80%E4%B9%88.png)"]],[39,99],[38,38]]],[1555046698035,["poul@pouldeMBP.lan",[[1,38,"![Binderæ¯ä»ä¹.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/Binder%E6%98%AF%E4%BB%80%E4%B9%88.png?raw=true)"]],[38,38],[167,167]]],[1555046709809,["poul@pouldeMBP.lan",[[1,427,"  - \n"]],[426,426],[431,431]]],[1555046710962,["poul@pouldeMBP.lan",[[-1,428," - "]],[431,431],[428,428]]],[1555046733164,["poul@pouldeMBP.lan",[[-1,427," "],[1,428,"\n"]],[428,428],[428,428]]],[1555046738055,["poul@pouldeMBP.lan",[[1,428,"### 相关知识"]],[428,428],[436,436]]],[1555046743666,["poul@pouldeMBP.lan",[[1,434,"基础"]],[434,434],[436,436]]],[1555046744956,["poul@pouldeMBP.lan",[[1,440,"\n"]],[438,438],[439,439]]],[1555046759973,["poul@pouldeMBP.lan",[[1,28,"### "]],[28,28],[32,32]]],[1555046762730,["poul@pouldeMBP.lan",[[-1,27," "]],[28,28],[27,27]]],[1555046765518,["poul@pouldeMBP.lan",[[1,442,"  "]],[442,442],[444,444]]],[1555046770898,["poul@pouldeMBP.lan",[[-1,442,"  "]],[444,444],[442,442]]],[1555046771306,["poul@pouldeMBP.lan",[[-1,443,"\n"]],[442,442],[441,441]]],[1555046772456,["poul@pouldeMBP.lan",[[1,443,"\n"]],[441,441],[442,442]]],[1555046776720,["poul@pouldeMBP.lan",[[1,442,"Linux相关。"]],[442,442],[450,450]]],[1555046776927,["poul@pouldeMBP.lan",[[1,452,"\n"]],[450,450],[451,451]]],[1555046785880,["poul@pouldeMBP.lan",[[1,451,"一个"]],[451,451],[453,453]]],[1555046786952,["poul@pouldeMBP.lan",[[-1,451,"一个"]],[453,453],[451,451]]],[1555046790790,["poul@pouldeMBP.lan",[[1,451,"- 一个进程"]],[451,451],[457,457]]],[1555046797623,["poul@pouldeMBP.lan",[[1,457,"空间氛围"]],[457,457],[461,461]]],[1555046798770,["poul@pouldeMBP.lan",[[-1,459,"氛围"]],[461,461],[459,459]]],[1555046802524,["poul@pouldeMBP.lan",[[1,459,"分为 "]],[459,459],[462,462]]],[1555046803770,["poul@pouldeMBP.lan",[[-1,461," "]],[462,462],[461,461]]],[1555046818922,["poul@pouldeMBP.lan",[[1,461,"用户空间和内核空间"]],[461,461],[470,470]]],[1555046837657,["poul@pouldeMBP.lan",[[-1,465,"和"]],[466,466],[465,465]]],[1555046838202,["poul@pouldeMBP.lan",[[1,465,"&"]],[465,465],[466,466]]],[1555046847181,["poul@pouldeMBP.lan",[[1,461,"**"],[1,465,"**"]],[461,465],[461,469]]],[1555046850500,["poul@pouldeMBP.lan",[[1,470,"**"],[1,474,"**"]],[470,474],[470,478]]],[1555046866661,["poul@pouldeMBP.lan",[[-1,470,"**内核空间**"],[1,478,"\n"]],[470,478],[471,471]]],[1555046871321,["poul@pouldeMBP.lan",[[1,470,"**内核空间**"],[-1,470,"\n"]],[471,471],[470,478]]],[1555046872288,["poul@pouldeMBP.lan",[[1,479,"- \n"]],[478,478],[481,481]]],[1555046888793,["poul@pouldeMBP.lan",[[1,478,"，即把进程内 **用户空间**&**内核空间**"]],[478,478],[502,502]]],[1555046894391,["poul@pouldeMBP.lan",[[-1,489,"空间"]],[489,491],[489,489]]],[1555046895884,["poul@pouldeMBP.lan",[[-1,496,"空间"]],[496,498],[496,496]]],[1555046896503,["poul@pouldeMBP.lan",[[1,496," "]],[496,496],[497,497]]],[1555046896647,["poul@pouldeMBP.lan",[[1,451,"  "]],[497,497],[499,499]]],[1555046899073,["poul@pouldeMBP.lan",[[-1,451,"  "]],[499,499],[497,497]]],[1555046905703,["poul@pouldeMBP.lan",[[1,499,"隔离开来"]],[499,499],[503,503]]],[1555046910673,["poul@pouldeMBP.lan",[[1,506,"二者区别"]],[506,506],[510,510]]],[1555046911088,["poul@pouldeMBP.lan",[[1,511,"- \n"]],[510,510],[513,513]]],[1555046911884,["poul@pouldeMBP.lan",[[1,511,"  "]],[513,513],[515,515]]],[1555046914795,["poul@pouldeMBP.lan",[[-1,513,"- "]],[515,515],[513,513]]],[1555046949717,["poul@pouldeMBP.lan",[[1,513,"1. 进程间，用户空间的数据不可共享，用户空间=不可共享空间"]],[513,513],[543,543]]],[1555046950303,["poul@pouldeMBP.lan",[[1,544,"  2. \n"]],[543,543],[549,549]]],[1555046965333,["poul@pouldeMBP.lan",[[1,549,"进程间，内核空间的数据可共享"]],[549,549],[563,563]]],[1555046969324,["poul@pouldeMBP.lan",[[1,527,"**"],[1,531,"**"]],[527,531],[527,535]]],[1555046970252,["poul@pouldeMBP.lan",[[1,527,"=="],[1,535,"=="]],[527,535],[527,539]]],[1555046977125,["poul@pouldeMBP.lan",[[-1,527,"=="],[-1,537,"=="]],[527,539],[527,535]]],[1555046977739,["poul@pouldeMBP.lan",[[-1,527,"**"],[-1,533,"**"]],[527,535],[527,531]]],[1555046979803,["poul@pouldeMBP.lan",[[1,527,"=="],[1,531,"=="]],[527,531],[527,535]]],[1555046985123,["poul@pouldeMBP.lan",[[1,564,"=="],[1,567,"=="]],[564,567],[564,571]]],[1555047008386,["poul@pouldeMBP.lan",[[1,571,"，内核空间=可共享空间"]],[571,571],[582,582]]],[1555047008881,["poul@pouldeMBP.lan",[[1,583,"  3. \n"]],[582,582],[588,588]]],[1555047009260,["poul@pouldeMBP.lan",[[-1,583,"  3. "]],[588,588],[584,584]]],[1555047015323,["poul@pouldeMBP.lan",[[-1,584,"\n"]],[584,584],[583,583]]],[1555047016255,["poul@pouldeMBP.lan",[[1,583,"》"]],[583,583],[584,584]]],[1555047016811,["poul@pouldeMBP.lan",[[-1,583,"》"]],[584,584],[583,583]]],[1555047017674,["poul@pouldeMBP.lan",[[1,583," >"]],[583,583],[585,585]]],[1555047018617,["poul@pouldeMBP.lan",[[-1,583," >"]],[585,585],[583,583]]],[1555047020567,["poul@pouldeMBP.lan",[[1,583,"> souy"]],[583,583],[589,589]]],[1555047021361,["poul@pouldeMBP.lan",[[-1,585,"souy"]],[589,589],[585,585]]],[1555047029046,["poul@pouldeMBP.lan",[[1,585,"所有进程公用一个"]],[585,585],[593,593]]],[1555047029853,["poul@pouldeMBP.lan",[[-1,589,"公用一个"]],[593,593],[589,589]]],[1555047031453,["poul@pouldeMBP.lan",[[1,589,"共用"]],[589,589],[591,591]]],[1555047036300,["poul@pouldeMBP.lan",[[1,591,"一个内核空间"]],[591,591],[597,597]]],[1555047038705,["poul@pouldeMBP.lan",[[1,598,"\n"]],[597,597],[598,598]]],[1555047039011,["poul@pouldeMBP.lan",[[1,599,"\n"]],[598,598],[599,599]]],[1555047061267,["poul@pouldeMBP.lan",[[1,585,"===="]],[585,585],[587,587]]],[1555047063104,["poul@pouldeMBP.lan",[[-1,587,"=="]],[587,587],[585,585]]],[1555047065319,["poul@pouldeMBP.lan",[[1,599,"===="]],[599,599],[601,601]]],[1555047069043,["poul@pouldeMBP.lan",[[-1,601,"=="]],[603,603],[601,601]]],[1555047088350,["poul@pouldeMBP.lan",[[1,602,"- "]],[602,602],[604,604]]],[1555047117488,["poul@pouldeMBP.lan",[[1,604,"进程内**用户空间**&**内核空间**进行交互，需要同伙"]],[604,604],[633,633]]],[1555047118522,["poul@pouldeMBP.lan",[[-1,631,"同伙"]],[633,633],[631,631]]],[1555047123640,["poul@pouldeMBP.lan",[[1,631,"通过系统焦勇"]],[631,631],[637,637]]],[1555047125452,["poul@pouldeMBP.lan",[[-1,635,"焦勇"]],[637,637],[635,635]]],[1555047131791,["poul@pouldeMBP.lan",[[1,635,"调用，朱啊哟"]],[635,635],[641,641]]],[1555047132504,["poul@pouldeMBP.lan",[[-1,638,"朱啊哟"]],[641,641],[638,638]]],[1555047138098,["poul@pouldeMBP.lan",[[1,638,"主要通过函数："]],[638,638],[645,645]]],[1555047138710,["poul@pouldeMBP.lan",[[1,646,"- \n"]],[645,645],[648,648]]],[1555047139414,["poul@pouldeMBP.lan",[[-1,646,"- "]],[648,648],[647,647]]],[1555047140552,["poul@pouldeMBP.lan",[[-1,647,"\n"]],[647,647],[646,646]]],[1555047141767,["poul@pouldeMBP.lan",[[1,646,"》"]],[646,646],[647,647]]],[1555047142378,["poul@pouldeMBP.lan",[[-1,646,"》"]],[647,647],[646,646]]],[1555047143221,["poul@pouldeMBP.lan",[[1,646,"> "]],[646,646],[648,648]]],[1555047154236,["poul@pouldeMBP.lan",[[1,648,"1.  copy_from_user（）：将用户空间的数据拷贝到内核空间"],[1,649,"2.  copy_to_user（）：将内核空间的数据拷贝到用户空间"]],[648,649],[719,719]]],[1555047158332,["poul@pouldeMBP.lan",[[1,685,"> "]],[685,685],[687,687]]],[1555047183279,["poul@pouldeMBP.lan",[[1,721,"\n"]],[721,721],[722,722]]],[1555047183997,["poul@pouldeMBP.lan",[[1,722,"\n"]],[722,722],[723,723]]],[1555047184733,["poul@pouldeMBP.lan",[[1,723,"\n"]],[723,723],[724,724]]],[1555047310113,["poul@pouldeMBP.lan",[[1,724,"\n"]],[722,722],[723,723]]],[1555047310493,["poul@pouldeMBP.lan",[[1,723,"![Linuxè·¨è¿ç¨éä¿¡.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/Linux%E8%B7%A8%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1.png?raw=true)"]],[723,723],[874,874]]],[1555047316009,["poul@pouldeMBP.lan",[[-1,730,"è·¨è¿ç¨éä¿¡"]],[730,745],[730,730]]],[1555047316817,["poul@pouldeMBP.lan",[[1,730,"jinc"]],[730,730],[734,734]]],[1555047317490,["poul@pouldeMBP.lan",[[-1,730,"jinc"]],[734,734],[730,730]]],[1555047318668,["poul@pouldeMBP.lan",[[1,730,"进程"]],[730,730],[732,732]]],[1555047320574,["poul@pouldeMBP.lan",[[-1,730,"进程"]],[732,732],[730,730]]],[1555047324564,["poul@pouldeMBP.lan",[[1,730,"跨进程通信"]],[730,730],[735,735]]],[1555047356156,["poul@pouldeMBP.lan",[[-1,442,"Linux相关。"],[1,450,"#"]],[442,450],[443,443]]],[1555047361273,["poul@pouldeMBP.lan",[[1,443,"### 进程空间划分"]],[443,443],[453,453]]],[1555047374208,["poul@pouldeMBP.lan",[[1,869,"\n"]],[867,867],[868,868]]],[1555047374368,["poul@pouldeMBP.lan",[[1,870,"\n"]],[868,868],[869,869]]],[1555047380993,["poul@pouldeMBP.lan",[[1,869,"#### 进程隔离 ￥"]],[869,869],[880,880]]],[1555047381455,["poul@pouldeMBP.lan",[[-1,879,"￥"]],[880,880],[879,879]]],[1555047390190,["poul@pouldeMBP.lan",[[1,879,"& 跨进程通信（IPC）"]],[879,879],[891,891]]],[1555047390633,["poul@pouldeMBP.lan",[[1,893,"\n"]],[891,891],[892,892]]],[1555047397854,["poul@pouldeMBP.lan",[[1,892,"- 进程隔离"]],[892,892],[898,898]]],[1555047398357,["poul@pouldeMBP.lan",[[1,899,"- \n"]],[898,898],[901,901]]],[1555047401547,["poul@pouldeMBP.lan",[[1,899,"  "]],[901,901],[903,903]]],[1555047405535,["poul@pouldeMBP.lan",[[-1,899,"  - "]],[903,903],[899,899]]],[1555047405995,["poul@pouldeMBP.lan",[[-1,900,"\n"]],[899,899],[898,898]]],[1555047406752,["poul@pouldeMBP.lan",[[1,899,"- \n"]],[898,898],[901,901]]],[1555047407309,["poul@pouldeMBP.lan",[[1,899,"  "]],[901,901],[903,903]]],[1555047410179,["poul@pouldeMBP.lan",[[1,903,"为了隔离"]],[903,903],[907,907]]],[1555047412217,["poul@pouldeMBP.lan",[[-1,905,"隔离"]],[907,907],[905,905]]],[1555047418961,["poul@pouldeMBP.lan",[[1,905,"保证安全性和"]],[905,905],[911,911]]],[1555047420692,["poul@pouldeMBP.lan",[[-1,910,"和"]],[911,911],[910,910]]],[1555047451148,["poul@pouldeMBP.lan",[[1,910,"&独立性，一个进程不能直接操作或者访问另一个进程，即Android中的进程"]],[910,910],[947,947]]],[1555047457034,["poul@pouldeMBP.lan",[[1,948,"相互独立、隔离的"]],[948,948],[956,956]]],[1555047457766,["poul@pouldeMBP.lan",[[1,957,"  - \n"]],[956,956],[961,961]]],[1555047461532,["poul@pouldeMBP.lan",[[-1,957,"  - "]],[961,961],[957,957]]],[1555047462278,["poul@pouldeMBP.lan",[[-1,958,"\n"]],[957,957],[956,956]]],[1555047462950,["poul@pouldeMBP.lan",[[1,957,"  - \n"]],[956,956],[961,961]]],[1555047465345,["poul@pouldeMBP.lan",[[-1,957,"  - "]],[961,961],[957,957]]],[1555047467708,["poul@pouldeMBP.lan",[[1,957,"- 夸"]],[957,957],[960,960]]],[1555047468067,["poul@pouldeMBP.lan",[[-1,959,"夸"]],[960,960],[959,959]]],[1555047474821,["poul@pouldeMBP.lan",[[1,959,"跨进程通信（IPC）"]],[959,959],[969,969]]],[1555047475221,["poul@pouldeMBP.lan",[[1,970,"- \n"]],[969,969],[972,972]]],[1555047476020,["poul@pouldeMBP.lan",[[1,970,"  "]],[972,972],[974,974]]],[1555047504462,["poul@pouldeMBP.lan",[[1,974,"进程间需要进行数据交换。"]],[974,974],[986,986]]],[1555047504886,["poul@pouldeMBP.lan",[[-1,985,"。"]],[986,986],[985,985]]],[1555047506440,["poul@pouldeMBP.lan",[[1,985,"、通信"]],[985,985],[988,988]]],[1555047571537,[null,[[-1,947,"\n"],[1,948,"是"],[1,990,"#"]],[947,947],[991,991]]],[1555047571537,[null,[[1,947,"\n"],[-1,947,"是"],[-1,990,"#"]],[991,991],[947,947]]],[1555047519716,["poul@pouldeMBP.lan",[[1,989,"  - \n"]],[988,988],[993,993]]],[1555047522513,["poul@pouldeMBP.lan",[[-1,989,"  - "]],[993,993],[989,989]]],[1555047533287,["poul@pouldeMBP.lan",[[1,989,"- 跨进程通信基本原理"]],[989,989],[1000,1000]]],[1555047533864,["poul@pouldeMBP.lan",[[1,1001,"- \n"]],[1000,1000],[1003,1003]]],[1555047534825,["poul@pouldeMBP.lan",[[-1,1001,"- "]],[1003,1003],[1001,1001]]],[1555047751537,[null,[[-1,947,"\n"],[1,948,"是"],[1,1003,"#"]],[947,947],[1004,1004]]],[1555047751537,[null,[[1,947,"\n"],[-1,947,"是"],[-1,1003,"#"]],[1004,1004],[947,947]]],[1555047731505,["poul@pouldeMBP.lan",[[1,1001,"![è·¨è¿ç¨åç.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/%E8%B7%A8%E8%BF%9B%E7%A8%8B%E5%8E%9F%E7%90%86.png?raw=true)"]],[1001,1001],[1142,1142]]],[1555047737252,["poul@pouldeMBP.lan",[[-1,1003,"è·¨è¿ç¨åç"],[1,1018,"跨进程"]],[1003,1003],[1006,1006]]],[1555047738534,["poul@pouldeMBP.lan",[[1,1006,"原理"]],[1006,1006],[1008,1008]]],[1555047811539,[null,[[-1,947,"\n"],[1,948,"是"],[1,1134,"#"]],[947,947],[1135,1135]]],[1555047811539,[null,[[1,947,"\n"],[-1,947,"是"],[-1,1134,"#"]],[1135,1135],[947,947]]],[1555047752226,["poul@pouldeMBP.lan",[[1,1134,"\n"]],[1133,1133],[1134,1134]]],[1555047752788,["poul@pouldeMBP.lan",[[1,1134,"》"]],[1134,1134],[1135,1135]]],[1555047753596,["poul@pouldeMBP.lan",[[-1,1134,"》"]],[1135,1135],[1134,1134]]],[1555047760928,["poul@pouldeMBP.lan",[[1,1134,"> 1.er"]],[1134,1134],[1140,1140]]],[1555047762052,["poul@pouldeMBP.lan",[[-1,1138,"er"]],[1140,1140],[1138,1138]]],[1555047769861,["poul@pouldeMBP.lan",[[1,1138,"而Binder的作用是。"]],[1138,1138],[1150,1150]]],[1555047771067,["poul@pouldeMBP.lan",[[-1,1149,"。"]],[1150,1150],[1149,1149]]],[1555047772792,["poul@pouldeMBP.lan",[[1,1149,"：链接"]],[1149,1149],[1152,1152]]],[1555047774201,["poul@pouldeMBP.lan",[[-1,1150,"链接"]],[1152,1152],[1150,1150]]],[1555047781796,["poul@pouldeMBP.lan",[[1,1150,"连接两个进程，实现mmp"]],[1150,1150],[1162,1162]]],[1555047783530,["poul@pouldeMBP.lan",[[-1,1161,"p"]],[1162,1162],[1161,1161]]],[1555047784997,["poul@pouldeMBP.lan",[[1,1161,"ap（）"]],[1161,1161],[1165,1165]]],[1555047786514,["poul@pouldeMBP.lan",[[-1,1163,"（）"]],[1165,1165],[1163,1163]]],[1555047809345,["poul@pouldeMBP.lan",[[1,1163,"()系统调用，主要负责创建数据接收的缓存空间接"]],[1163,1163],[1186,1186]]],[1555047809853,["poul@pouldeMBP.lan",[[-1,1185,"接"]],[1186,1186],[1185,1185]]],[1555047810670,["poul@pouldeMBP.lan",[[1,1185,"和"]],[1185,1185],[1186,1186]]],[1555047871590,[null,[[-1,947,"\n"],[1,948,"是"],[1,1187,"#"]],[947,947],[1188,1188]]],[1555047871590,[null,[[1,947,"\n"],[-1,947,"是"],[-1,1187,"#"]],[1188,1188],[947,947]]],[1555047819311,["poul@pouldeMBP.lan",[[1,1186,"管理数据接收空间"]],[1186,1186],[1194,1194]]],[1555047822808,["poul@pouldeMBP.lan",[[1,1195,"\n"]],[1194,1194],[1195,1195]]],[1555047824644,["poul@pouldeMBP.lan",[[1,1195,"》"]],[1195,1195],[1196,1196]]],[1555047825261,["poul@pouldeMBP.lan",[[-1,1195,"》"]],[1196,1196],[1195,1195]]],[1555047825602,["poul@pouldeMBP.lan",[[1,1195,"."]],[1195,1195],[1196,1196]]],[1555047826211,["poul@pouldeMBP.lan",[[-1,1195,"."]],[1196,1196],[1195,1195]]],[1555047829488,["poul@pouldeMBP.lan",[[1,1195,"> zhu"]],[1195,1195],[1200,1200]]],[1555047830295,["poul@pouldeMBP.lan",[[-1,1197,"zhu"]],[1200,1200],[1197,1197]]],[1555047843470,["poul@pouldeMBP.lan",[[1,1197,"2.传统的跨进程通讯"]],[1197,1197],[1207,1207]]],[1555047844993,["poul@pouldeMBP.lan",[[-1,1206,"讯"]],[1207,1207],[1206,1206]]],[1555047865147,["poul@pouldeMBP.lan",[[1,1206,"信需要拷贝数据2次，但Binder机制秩序"]],[1206,1206],[1227,1227]]],[1555047866015,["poul@pouldeMBP.lan",[[-1,1225,"秩序"]],[1227,1227],[1225,1225]]],[1555047869247,["poul@pouldeMBP.lan",[[1,1225,"只需1次"]],[1225,1225],[1229,1229]]],[1555047931599,[null,[[-1,947,"\n"],[1,948,"是"],[1,1230,"#"]],[947,947],[1231,1231]]],[1555047931600,[null,[[1,947,"\n"],[-1,947,"是"],[-1,1230,"#"]],[1231,1231],[947,947]]],[1555047883988,["poul@pouldeMBP.lan",[[1,1229,"，主要使用到了内存映射"]],[1229,1229],[1240,1240]]],[1555048291597,[null,[[-1,947,"\n"],[1,948,"是"],[1,1241,"#"]],[947,947],[1242,1242]]],[1555048291597,[null,[[1,947,"\n"],[-1,947,"是"],[-1,1241,"#"]],[1242,1242],[947,947]]],[1555048253225,["poul@pouldeMBP.lan",[[1,1241,"\n"]],[1240,1240],[1241,1241]]],[1555048253416,["poul@pouldeMBP.lan",[[1,1242,"\n"]],[1241,1241],[1242,1242]]],[1555048261256,["poul@pouldeMBP.lan",[[1,1242,"###"]],[1242,1242],[1245,1245]]],[1555048263776,["poul@pouldeMBP.lan",[[1,1246,"\n"]],[1245,1245],[1246,1246]]],[1555048266360,["poul@pouldeMBP.lan",[[-1,1241,"\n"]],[1242,1242],[1241,1241]]],[1555048267488,["poul@pouldeMBP.lan",[[1,1241,"\n"]],[1241,1241],[1242,1242]]],[1555048270485,["poul@pouldeMBP.lan",[[1,1245," "]],[1245,1245],[1246,1246]]],[1555048351584,[null,[[-1,947,"\n"],[1,948,"是"],[1,1248,"#"]],[947,947],[1249,1249]]],[1555048351584,[null,[[1,947,"\n"],[-1,947,"是"],[-1,1248,"#"]],[1249,1249],[947,947]]],[1555048309058,["poul@pouldeMBP.lan",[[1,1245,"#"]],[1245,1245],[1246,1246]]],[1555048312946,["poul@pouldeMBP.lan",[[1,1247,"neic"]],[1247,1247],[1251,1251]]],[1555048313727,["poul@pouldeMBP.lan",[[-1,1247,"neic"]],[1251,1251],[1247,1247]]],[1555048316229,["poul@pouldeMBP.lan",[[1,1247,"内存映射"]],[1247,1247],[1251,1251]]],[1555048316968,["poul@pouldeMBP.lan",[[1,1253,"\n"]],[1251,1251],[1252,1252]]],[1555048317436,["poul@pouldeMBP.lan",[[1,1254,"\n"]],[1252,1252],[1253,1253]]],[1555048332699,["poul@pouldeMBP.lan",[[1,1253,"### Binder跨进程通讯"]],[1253,1253],[1268,1268]]],[1555048333132,["poul@pouldeMBP.lan",[[-1,1267,"讯"]],[1268,1268],[1267,1267]]],[1555048336060,["poul@pouldeMBP.lan",[[1,1267,"信机制 "]],[1267,1267],[1271,1271]]],[1555048336654,["poul@pouldeMBP.lan",[[-1,1270," "]],[1271,1271],[1270,1270]]],[1555048336956,["poul@pouldeMBP.lan",[[1,1270,"-"]],[1270,1270],[1271,1271]]],[1555048337616,["poul@pouldeMBP.lan",[[-1,1270,"-"]],[1271,1271],[1270,1270]]],[1555048339687,["poul@pouldeMBP.lan",[[1,1270,"——模型"]],[1270,1270],[1274,1274]]],[1555048411640,[null,[[-1,947,"\n"],[1,948,"是"],[1,1276,"#"]],[947,947],[1277,1277]]],[1555048411640,[null,[[1,947,"\n"],[-1,947,"是"],[-1,1276,"#"]],[1277,1277],[947,947]]],[1555048359907,["poul@pouldeMBP.lan",[[1,1276,"\n"]],[1275,1275],[1276,1276]]],[1555048360086,["poul@pouldeMBP.lan",[[1,1277,"\n"]],[1276,1276],[1277,1277]]],[1555048379726,["poul@pouldeMBP.lan",[[1,1276,"Binder"]],[1276,1276],[1282,1282]]],[1555048381375,["poul@pouldeMBP.lan",[[-1,1276,"Binder"]],[1282,1282],[1276,1276]]],[1555048381689,["poul@pouldeMBP.lan",[[-1,1277,"\n"]],[1276,1276],[1275,1275]]],[1555048394673,["poul@pouldeMBP.lan",[[1,1275,"该模型基于C、"]],[1275,1275],[1282,1282]]],[1555048395337,["poul@pouldeMBP.lan",[[-1,1281,"、"]],[1282,1282],[1281,1281]]],[1555048399350,["poul@pouldeMBP.lan",[[1,1281,"\\Smoshi"]],[1281,1281],[1288,1288]]],[1555048400335,["poul@pouldeMBP.lan",[[-1,1283,"moshi"]],[1288,1288],[1283,1283]]],[1555048404416,["poul@pouldeMBP.lan",[[1,1283,"模式（）"]],[1283,1283],[1287,1287]]],[1555048411521,["poul@pouldeMBP.lan",[[1,1286,"Client-Service"]],[1286,1286],[1300,1300]]],[1555048531663,[null,[[-1,947,"\n"],[1,948,"是"],[1,1303,"#"]],[947,947],[1304,1304]]],[1555048531663,[null,[[1,947,"\n"],[-1,947,"是"],[-1,1303,"#"]],[1304,1304],[947,947]]],[1555048476063,["poul@pouldeMBP.lan",[[1,1303,"\n"]],[1301,1301],[1302,1302]]],[1555048514967,["poul@pouldeMBP.lan",[[1,1303,"| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |\n"]],[1302,1302],[1544,1544]]],[1555048517889,["poul@pouldeMBP.lan",[[-1,1303,"| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |\n"]],[1544,1544],[1302,1302]]],[1555048591632,[null,[[-1,947,"\n"],[1,948,"是"],[1,1304,"#"]],[947,947],[1305,1305]]],[1555048591632,[null,[[1,947,"\n"],[-1,947,"是"],[-1,1304,"#"]],[1305,1305],[947,947]]],[1555048540880,["poul@pouldeMBP.lan",[[1,1303,"| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |\n"]],[1302,1302],[1544,1544]]],[1555048545125,["poul@pouldeMBP.lan",[[-1,1305,"item"]],[1305,1309],[1305,1305]]],[1555048548568,["poul@pouldeMBP.lan",[[1,1305,"角色"]],[1305,1305],[1307,1307]]],[1555048552605,["poul@pouldeMBP.lan",[[-1,1315,"Model"],[1,1320,"作用"]],[1315,1315],[1317,1317]]],[1555048555632,["poul@pouldeMBP.lan",[[1,1352,"："]],[1352,1352],[1353,1353]]],[1555048557170,["poul@pouldeMBP.lan",[[-1,1352,"："]],[1353,1353],[1352,1352]]],[1555048557709,["poul@pouldeMBP.lan",[[1,1352,":"]],[1352,1352],[1353,1353]]],[1555048559734,["poul@pouldeMBP.lan",[[1,1361,":"]],[1361,1361],[1362,1362]]],[1555048565230,["poul@pouldeMBP.lan",[[-1,1331," Qty |"]],[1331,1337],[1331,1331]]],[1555048569222,["poul@pouldeMBP.lan",[[-1,1367," --: |"]],[1367,1373],[1367,1367]]],[1555048571604,["poul@pouldeMBP.lan",[[-1,1402,"  1 |"]],[1402,1407],[1402,1402]]],[1555048573711,["poul@pouldeMBP.lan",[[-1,1436,"   2 |"]],[1438,1442],[1436,1436]]],[1555048576476,["poul@pouldeMBP.lan",[[-1,1400,"| "]],[1402,1402],[1400,1400]]],[1555048577522,["poul@pouldeMBP.lan",[[1,1400,"|"]],[1400,1400],[1401,1401]]],[1555048580646,["poul@pouldeMBP.lan",[[-1,1469,"   3 |"]],[1469,1475],[1469,1469]]],[1555048583664,["poul@pouldeMBP.lan",[[-1,1503,"   2 |"]],[1503,1509],[1503,1503]]],[1555048588760,["poul@pouldeMBP.lan",[[-1,1341,"--"]],[1341,1343],[1341,1341]]],[1555048590629,["poul@pouldeMBP.lan",[[1,1342," "]],[1341,1341],[1342,1342]]],[1555048651675,[null,[[-1,947,"\n"],[1,948,"是"],[1,1504,"#"]],[947,947],[1505,1505]]],[1555048651675,[null,[[1,947,"\n"],[-1,947,"是"],[-1,1504,"#"]],[1505,1505],[947,947]]],[1555048596455,["poul@pouldeMBP.lan",[[1,1334,":"]],[1334,1334],[1335,1335]]],[1555048598710,["poul@pouldeMBP.lan",[[-1,1343," "]],[1343,1343],[1342,1342]]],[1555048599092,["poul@pouldeMBP.lan",[[1,1342,":"]],[1342,1342],[1343,1343]]],[1555048602994,["poul@pouldeMBP.lan",[[-1,1324,"Price"],[1,1329,"b"]],[1324,1329],[1325,1325]]],[1555048603515,["poul@pouldeMBP.lan",[[1,1325,"eizh"]],[1325,1325],[1329,1329]]],[1555048604385,["poul@pouldeMBP.lan",[[-1,1324,"beizh"]],[1329,1329],[1324,1324]]],[1555048605877,["poul@pouldeMBP.lan",[[1,1324,"备注"]],[1324,1324],[1326,1326]]],[1555048611961,["poul@pouldeMBP.lan",[[-1,1367,"Laptop"],[1,1373,"Client"]],[1367,1367],[1373,1373]]],[1555048613243,["poul@pouldeMBP.lan",[[1,1373,"进程"]],[1373,1373],[1375,1375]]],[1555048618377,["poul@pouldeMBP.lan",[[-1,1403,"Phon"],[1,1407,"Servic"]],[1403,1403],[1410,1410]]],[1555048620334,["poul@pouldeMBP.lan",[[1,1410,"进程"]],[1410,1410],[1412,1412]]],[1555048625459,["poul@pouldeMBP.lan",[[-1,1441,"Watch"]],[1441,1441],[1441,1441]]],[1555048626075,["poul@pouldeMBP.lan",[[1,1441,"manag"]],[1441,1441],[1446,1446]]],[1555048627038,["poul@pouldeMBP.lan",[[-1,1441,"manag"]],[1446,1446],[1441,1441]]],[1555048635687,["poul@pouldeMBP.lan",[[1,1441,"ServiceManager进程"]],[1441,1441],[1457,1457]]],[1555048643523,["poul@pouldeMBP.lan",[[-1,1486,"Headphone"],[1,1495,"Binder"]],[1486,1486],[1492,1492]]],[1555048644984,["poul@pouldeMBP.lan",[[1,1492,"驱动"]],[1492,1492],[1494,1494]]],[1555048711635,[null,[[-1,947,"\n"],[1,948,"是"],[1,1518,"#"]],[947,947],[1519,1519]]],[1555048711635,[null,[[1,947,"\n"],[-1,947,"是"],[-1,1518,"#"]],[1519,1519],[947,947]]],[1555048653461,["poul@pouldeMBP.lan",[[-1,1375,"    "]],[1375,1379],[1375,1375]]],[1555048655470,["poul@pouldeMBP.lan",[[-1,1408,"     "]],[1408,1413],[1408,1408]]],[1555048658647,["poul@pouldeMBP.lan",[[-1,1448,"     "]],[1448,1453],[1448,1448]]],[1555048660651,["poul@pouldeMBP.lan",[[-1,1488,"    "]],[1488,1492],[1488,1488]]],[1555048662675,["poul@pouldeMBP.lan",[[-1,1414,"     "]],[1414,1419],[1414,1414]]],[1555048694265,["poul@pouldeMBP.lan",[[-1,1377,"13\" Pro "],[1,1385,"s"]],[1377,1385],[1378,1378]]],[1555048694594,["poul@pouldeMBP.lan",[[1,1378,"hi"]],[1378,1378],[1380,1380]]],[1555048695326,["poul@pouldeMBP.lan",[[-1,1377,"shi"]],[1380,1380],[1377,1377]]],[1555048698656,["poul@pouldeMBP.lan",[[1,1377,"使用服务的进程"]],[1377,1377],[1384,1384]]],[1555048705237,["poul@pouldeMBP.lan",[[-1,1387,"$1,300"],[1,1393,"APP"]],[1387,1387],[1390,1390]]],[1555048711280,["poul@pouldeMBP.lan",[[-1,1406,"Plus"],[1,1410,"提供"]],[1406,1406],[1408,1408]]],[1555048771663,[null,[[-1,947,"\n"],[1,948,"是"],[1,1489,"#"]],[947,947],[1490,1490]]],[1555048771663,[null,[[1,947,"\n"],[-1,947,"是"],[-1,1489,"#"]],[1490,1490],[947,947]]],[1555048712258,["poul@pouldeMBP.lan",[[1,1408,"福"]],[1408,1408],[1409,1409]]],[1555048712697,["poul@pouldeMBP.lan",[[-1,1408,"福"]],[1409,1409],[1408,1408]]],[1555048715418,["poul@pouldeMBP.lan",[[1,1408,"服务的基础"]],[1408,1408],[1413,1413]]],[1555048721031,["poul@pouldeMBP.lan",[[-1,1417,"$800"],[1,1421,"服务"]],[1417,1417],[1419,1419]]],[1555048722794,["poul@pouldeMBP.lan",[[1,1419,"起"]],[1419,1419],[1420,1420]]],[1555048725045,["poul@pouldeMBP.lan",[[-1,1417,"服务起"]],[1420,1420],[1417,1417]]],[1555048727250,["poul@pouldeMBP.lan",[[1,1417,"服务器端"]],[1417,1417],[1421,1421]]],[1555048732148,["poul@pouldeMBP.lan",[[-1,1444,"Series 3"]],[1444,1452],[1444,1444]]],[1555048743198,["poul@pouldeMBP.lan",[[1,1444,"管理Service注册和"]],[1444,1444],[1456,1456]]],[1555048743586,["poul@pouldeMBP.lan",[[-1,1455,"和"]],[1456,1456],[1455,1455]]],[1555048752815,["poul@pouldeMBP.lan",[[1,1455,"与查询（）"]],[1455,1455],[1460,1460]]],[1555048756001,["poul@pouldeMBP.lan",[[1,1459,"讲"]],[1459,1459],[1460,1460]]],[1555048757190,["poul@pouldeMBP.lan",[[-1,1459,"讲"]],[1460,1460],[1459,1459]]],[1555048762685,["poul@pouldeMBP.lan",[[1,1459,"将字符像是"]],[1459,1459],[1464,1464]]],[1555048763655,["poul@pouldeMBP.lan",[[-1,1462,"像是"]],[1464,1464],[1462,1462]]],[1555048771326,["poul@pouldeMBP.lan",[[1,1462,"形式的Binder名字，"]],[1462,1462],[1474,1474]]],[1555048831654,[null,[[-1,947,"\n"],[1,948,"是"],[1,1517,"#"]],[947,947],[1518,1518]]],[1555048831654,[null,[[1,947,"\n"],[-1,947,"是"],[-1,1517,"#"]],[1518,1518],[947,947]]],[1555048791544,["poul@pouldeMBP.lan",[[1,1474,"转化成Client中对该Binder的引用"]],[1474,1474],[1495,1495]]],[1555048796804,["poul@pouldeMBP.lan",[[-1,1501,"$400 "],[1,1506,"类似"]],[1501,1501],[1503,1503]]],[1555048798785,["poul@pouldeMBP.lan",[[1,1503,"路由器"]],[1503,1503],[1506,1506]]],[1555048803562,["poul@pouldeMBP.lan",[[-1,1521,"HD650"]],[1521,1526],[1521,1521]]],[1555048804653,["poul@pouldeMBP.lan",[[1,1521,"\n"]],[1521,1521],[1522,1522]]],[1555048805894,["poul@pouldeMBP.lan",[[-1,1521,"\n"]],[1522,1522],[1521,1521]]],[1555048810668,["poul@pouldeMBP.lan",[[1,1521,"\n"]],[1521,1521],[1522,1522]]],[1555048812684,["poul@pouldeMBP.lan",[[1,1522,"- "]],[1522,1522],[1524,1524]]],[1555048813585,["poul@pouldeMBP.lan",[[1,1524,"\n"]],[1524,1524],[1525,1525]]],[1555048818360,["poul@pouldeMBP.lan",[[-1,1524,"\n"]],[1525,1525],[1524,1524]]],[1555048819016,["poul@pouldeMBP.lan",[[-1,1522,"- "]],[1524,1524],[1522,1522]]],[1555048819633,["poul@pouldeMBP.lan",[[-1,1521,"\n"]],[1522,1522],[1521,1521]]],[1555048820827,["poul@pouldeMBP.lan",[[-1,1520," "]],[1521,1521],[1520,1520]]],[1555048891692,[null,[[-1,947,"\n"],[1,948,"是"],[1,1532,"#"]],[947,947],[1533,1533]]],[1555048891693,[null,[[1,947,"\n"],[-1,947,"是"],[-1,1532,"#"]],[1533,1533],[947,947]]],[1555048867710,["poul@pouldeMBP.lan",[[1,1520,"1."]],[1520,1520],[1522,1522]]],[1555048872705,["poul@pouldeMBP.lan",[[-1,1520,"1."]],[1522,1522],[1520,1520]]],[1555048890290,["poul@pouldeMBP.lan",[[1,1520,"一种虚拟设备驱动，是连接Service进程、"]],[1520,1520],[1542,1542]]],[1555048951689,[null,[[-1,947,"\n"],[1,948,"是"],[1,1554,"#"]],[947,947],[1555,1555]]],[1555048951689,[null,[[1,947,"\n"],[-1,947,"是"],[-1,1554,"#"]],[1555,1555],[947,947]]],[1555048920511,["poul@pouldeMBP.lan",[[1,1542,"Client进行和ServiceManager的桥梁，具体作用为：《"]],[1542,1542],[1576,1576]]],[1555048921017,["poul@pouldeMBP.lan",[[-1,1575,"《"]],[1576,1576],[1575,1575]]],[1555048922065,["poul@pouldeMBP.lan",[[1,1575,"<>"]],[1575,1575],[1577,1577]]],[1555048923949,["poul@pouldeMBP.lan",[[1,1576,"br"]],[1576,1576],[1578,1578]]],[1555048927089,["poul@pouldeMBP.lan",[[1,1576,"/"]],[1576,1576],[1577,1577]]],[1555048933067,["poul@pouldeMBP.lan",[[1,1580,"1.chan"]],[1580,1580],[1586,1586]]],[1555048933907,["poul@pouldeMBP.lan",[[-1,1582,"chan"]],[1586,1586],[1582,1582]]],[1555048949893,["poul@pouldeMBP.lan",[[1,1582,"传递跨进程的数据：通过内存映射《》"]],[1582,1582],[1599,1599]]],[1555048950697,["poul@pouldeMBP.lan",[[-1,1597,"《》"]],[1599,1599],[1597,1597]]],[1555048951514,["poul@pouldeMBP.lan",[[1,1597,"<"]],[1597,1597],[1598,1598]]],[1555049011644,[null,[[-1,947,"\n"],[1,948,"是"],[1,1610,"#"]],[947,947],[1611,1611]]],[1555049011644,[null,[[1,947,"\n"],[-1,947,"是"],[-1,1610,"#"]],[1611,1611],[947,947]]],[1555048953373,["poul@pouldeMBP.lan",[[1,1598,"/bar"]],[1598,1598],[1602,1602]]],[1555048955408,["poul@pouldeMBP.lan",[[-1,1600,"ar"]],[1602,1602],[1600,1600]]],[1555048955919,["poul@pouldeMBP.lan",[[1,1600,"r"]],[1600,1600],[1601,1601]]],[1555048963806,["poul@pouldeMBP.lan",[[1,1602,"2.实现县城"]],[1602,1602],[1608,1608]]],[1555048964867,["poul@pouldeMBP.lan",[[-1,1606,"县城"]],[1608,1608],[1606,1606]]],[1555048970040,["poul@pouldeMBP.lan",[[1,1606,"进程"]],[1606,1606],[1608,1608]]],[1555048971807,["poul@pouldeMBP.lan",[[-1,1606,"进程"]],[1608,1608],[1606,1606]]],[1555048986419,["poul@pouldeMBP.lan",[[1,1606,"线程控制：采用Binder线程池，病"]],[1606,1606],[1624,1624]]],[1555048987254,["poul@pouldeMBP.lan",[[-1,1623,"病"]],[1624,1624],[1623,1623]]],[1555048994950,["poul@pouldeMBP.lan",[[1,1623,"并由Binder驱动姿势"]],[1623,1623],[1635,1635]]],[1555048996213,["poul@pouldeMBP.lan",[[-1,1633,"姿势"]],[1635,1635],[1633,1633]]],[1555049003215,["poul@pouldeMBP.lan",[[1,1633,"自身进行管理"]],[1633,1633],[1639,1639]]],[1555049008322,["poul@pouldeMBP.lan",[[-1,1640,"   $350 "]],[1648,1648],[1640,1640]]],[1555049071657,[null,[[-1,947,"\n"],[1,948,"是"],[-1,1601,"|"],[1,1602,">"],[-1,1639," "],[1,1640,"||"],[1,1642,"#"]],[947,947],[1643,1643]]],[1555049071657,[null,[[1,947,"\n"],[-1,947,"是"],[1,1601,"|"],[-1,1601,">"],[1,1639," "],[-1,1639,"||"],[-1,1643,"#"]],[1643,1643],[947,947]]],[1555049029615,["poul@pouldeMBP.lan",[[1,1640,"Binder驱动持有每个Service"]],[1640,1640],[1659,1659]]],[1555049031931,["poul@pouldeMBP.lan",[[-1,1656,"ice"]],[1659,1659],[1656,1656]]],[1555049032661,["poul@pouldeMBP.lan",[[1,1656,"人"]],[1656,1656],[1657,1657]]],[1555049033355,["poul@pouldeMBP.lan",[[-1,1656,"人"]],[1657,1657],[1656,1656]]],[1555049069366,["poul@pouldeMBP.lan",[[1,1656,"er进程在内核空间中的Binder实体，并给Client进程提供Binder实体的引用"]],[1656,1656],[1699,1699]]],[1555049131650,[null,[[-1,947,"\n"],[1,948,"是"],[-1,1601,"|"],[1,1602,">"],[-1,1639," "],[1,1640,"|"],[1,1699,"|"],[1,1701,"#"]],[947,947],[1702,1702]]],[1555049131650,[null,[[1,947,"\n"],[-1,947,"是"],[1,1601,"|"],[-1,1601,">"],[1,1639," "],[-1,1639,"|"],[-1,1699,"|"],[-1,1702,"#"]],[1702,1702],[947,947]]],[1555049113974,["poul@pouldeMBP.lan",[[1,1303,"\n"]],[1301,1301],[1302,1302]]],[1555049114413,["poul@pouldeMBP.lan",[[1,1302,"![C\\Sæ¨¡ååç.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/C%5CS%E6%A8%A1%E5%9E%8B%E5%8E%9F%E7%90%86.png?raw=true)"]],[1302,1302],[1439,1439]]],[1555049119084,["poul@pouldeMBP.lan",[[-1,1307,"æ¨¡ååç"],[1,1319,"模型"]],[1307,1307],[1309,1309]]],[1555049120285,["poul@pouldeMBP.lan",[[1,1309,"原理"]],[1309,1309],[1311,1311]]],[1555049191690,[null,[[-1,947,"\n"],[1,948,"是"],[-1,1731,"|"],[1,1732,">"],[-1,1769," "],[1,1770,"|"],[1,1829,"|"],[1,1831,"#"]],[947,947],[1832,1832]]],[1555049191690,[null,[[1,947,"\n"],[-1,947,"是"],[1,1731,"|"],[-1,1731,">"],[1,1769," "],[-1,1769,"|"],[-1,1829,"|"],[-1,1832,"#"]],[1832,1832],[947,947]]],[1555049187174,["poul@pouldeMBP.lan",[[-1,1482,":"]],[1483,1483],[1482,1482]]],[1555049251701,[null,[[-1,947,"\n"],[1,948,"是"],[-1,1730,"|"],[1,1731,">"],[-1,1768," "],[1,1769,"|"],[1,1828,"|"],[1,1830,"#"]],[947,947],[1831,1831]]],[1555049251701,[null,[[1,947,"\n"],[-1,947,"是"],[1,1730,"|"],[-1,1730,">"],[1,1768," "],[-1,1768,"|"],[-1,1828,"|"],[-1,1831,"#"]],[1831,1831],[947,947]]],[1555049223577,["poul@pouldeMBP.lan",[[-1,1490,":"]],[1491,1491],[1490,1490]]],[1555049232002,["poul@pouldeMBP.lan",[[1,1829,"|           |           |       |\n"]],[1828,1828],[1830,1841]]],[1555049232562,["poul@pouldeMBP.lan",[[-1,1830,"           "],[1,1841,"\n"]],[1830,1841],[1831,1831]]],[1555049234218,["poul@pouldeMBP.lan",[[-1,1830,"\n"]],[1831,1831],[1830,1830]]],[1555049234797,["poul@pouldeMBP.lan",[[-1,1830,"|"]],[1830,1830],[1829,1829]]],[1555049242363,["poul@pouldeMBP.lan",[[-1,1829,"|           |       |"]],[1850,1850],[1829,1829]]],[1555049311652,[null,[[-1,947,"\n"],[1,948,"是"],[-1,1729,"|"],[1,1730,">"],[-1,1767," "],[1,1768,"|"],[1,1827,"|"],[1,1830,"#"]],[947,947],[1831,1831]]],[1555049311652,[null,[[1,947,"\n"],[-1,947,"是"],[1,1729,"|"],[-1,1729,">"],[1,1767," "],[-1,1767,"|"],[-1,1827,"|"],[-1,1831,"#"]],[1831,1831],[947,947]]],[1555049267254,["poul@pouldeMBP.lan",[[1,1831,"\n"]],[1829,1829],[1830,1830]]],[1555049279166,["poul@pouldeMBP.lan",[[1,1830,"### Binder驱动的作用和"]],[1830,1830],[1846,1846]]],[1555049280570,["poul@pouldeMBP.lan",[[-1,1845,"和"]],[1846,1846],[1845,1845]]],[1555049281336,["poul@pouldeMBP.lan",[[1,1845,"￥"]],[1845,1845],[1846,1846]]],[1555049281692,["poul@pouldeMBP.lan",[[-1,1845,"￥"]],[1846,1846],[1845,1845]]],[1555049282950,["poul@pouldeMBP.lan",[[1,1845,"& "]],[1845,1845],[1847,1847]]],[1555049283610,["poul@pouldeMBP.lan",[[-1,1846," "]],[1847,1847],[1846,1846]]],[1555049284839,["poul@pouldeMBP.lan",[[1,1846,"原理"]],[1846,1846],[1848,1848]]],[1555049285190,["poul@pouldeMBP.lan",[[1,1850,"\n"]],[1848,1848],[1849,1849]]],[1555050631733,[null,[[-1,947,"\n"],[1,948,"是"],[-1,1729,"|"],[1,1730,">"],[-1,1767," "],[1,1768,"|"],[-1,1827,"\n"],[1,1828,"|"],[-1,1848,"#"],[1,1849,"\n"],[1,1851,"##"]],[947,947],[1853,1853]]],[1555050631733,[null,[[1,947,"\n"],[-1,947,"是"],[1,1729,"|"],[-1,1729,">"],[1,1767," "],[-1,1767,"|"],[1,1827,"\n"],[-1,1827,"|"],[1,1848,"#"],[-1,1848,"\n"],[-1,1851,"##"]],[1853,1853],[947,947]]],[1555050572753,["poul@pouldeMBP.lan",[[1,1849,"租用"]],[1849,1849],[1851,1851]]],[1555050573467,["poul@pouldeMBP.lan",[[-1,1849,"租用"]],[1851,1851],[1849,1849]]],[1555050588430,["poul@pouldeMBP.lan",[[1,1849,"作用：连接Service进程、Client今年"]],[1849,1849],[1872,1872]]],[1555050588988,["poul@pouldeMBP.lan",[[-1,1870,"今年"]],[1872,1872],[1870,1870]]],[1555050626569,["poul@pouldeMBP.lan",[[1,1870,"进程和ServiceManager桥梁"]],[1870,1870],[1889,1889]]],[1555050626928,["poul@pouldeMBP.lan",[[1,1891,"\n"]],[1889,1889],[1890,1890]]],[1555050630365,["poul@pouldeMBP.lan",[[1,1890,"原理"]],[1890,1890],[1892,1892]]],[1555050691708,[null,[[-1,947,"\n"],[1,948,"是"],[-1,1729,"|"],[1,1730,">"],[-1,1767," "],[1,1768,"|"],[-1,1827,"\n"],[1,1828,"|"],[-1,1848,"#"],[1,1849,"\n"],[1,1894,"##"]],[947,947],[1896,1896]]],[1555050691708,[null,[[1,947,"\n"],[-1,947,"是"],[1,1729,"|"],[-1,1729,">"],[1,1767," "],[-1,1767,"|"],[1,1827,"\n"],[-1,1827,"|"],[1,1848,"#"],[-1,1848,"\n"],[-1,1894,"##"]],[1896,1896],[947,947]]],[1555050645599,["poul@pouldeMBP.lan",[[1,1892,"：内存映射，即内部调用买马匹（）"]],[1892,1892],[1908,1908]]],[1555050647059,["poul@pouldeMBP.lan",[[-1,1903,"买马匹（）"]],[1908,1908],[1903,1903]]],[1555050653578,["poul@pouldeMBP.lan",[[1,1903,"mmap（）函数"]],[1903,1903],[1911,1911]]],[1555050658186,["poul@pouldeMBP.lan",[[1,1913,"\n"]],[1911,1911],[1912,1912]]],[1555050659694,["poul@pouldeMBP.lan",[[1,1912,"实际"]],[1912,1912],[1914,1914]]],[1555050660338,["poul@pouldeMBP.lan",[[-1,1912,"实际"]],[1914,1914],[1912,1912]]],[1555050670331,["poul@pouldeMBP.lan",[[1,1912,"实际用途：1，"]],[1912,1912],[1919,1919]]],[1555050672273,["poul@pouldeMBP.lan",[[-1,1918,"，"]],[1919,1919],[1918,1918]]],[1555050672586,["poul@pouldeMBP.lan",[[1,1918,"。"]],[1918,1918],[1919,1919]]],[1555050673742,["poul@pouldeMBP.lan",[[-1,1918,"。"]],[1919,1919],[1918,1918]]],[1555050689934,["poul@pouldeMBP.lan",[[1,1918,".创建数据接收的缓存空间；2."]],[1918,1918],[1933,1933]]],[1555050751717,[null,[[-1,947,"\n"],[1,948,"是"],[-1,1729,"|"],[1,1730,">"],[-1,1767," "],[1,1768,"|"],[-1,1827,"\n"],[1,1828,"|"],[-1,1848,"#"],[1,1849,"\n"],[1,1935,"##"]],[947,947],[1937,1937]]],[1555050751717,[null,[[1,947,"\n"],[-1,947,"是"],[1,1729,"|"],[-1,1729,">"],[1,1767," "],[-1,1767,"|"],[1,1827,"\n"],[-1,1827,"|"],[1,1848,"#"],[-1,1848,"\n"],[-1,1935,"##"]],[1937,1937],[947,947]]],[1555050693301,["poul@pouldeMBP.lan",[[1,1933,"地址映射"]],[1933,1933],[1937,1937]]]],null,"poul@pouldeMBP.lan"],["1de85d8a-2b04-440d-a0be-1876faf241a5",1555145153882,"# Android面试题\n\n\n## Binder机制\n### 什么是Binder\n![Binderæ¯ä»ä¹.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/Binder%E6%98%AF%E4%BB%80%E4%B9%88.png?raw=true)\n- 从机制、模型角度讲\n  - Binder是一种Android中实现跨进程通信（IPC）的方式，即Binder机制模型\n  - 在Android中实现跨进程通信\n- 从模型结构、组成讲\n  - Binder是一种虚拟的物理设备驱动，即Binder驱动\n  - 连接Service进程、Client进程和ServiceManager进程\n- 从Android代码的实现角度讲\n  - Binder是个类，实现了IBinder接口，即Binder类\n  - 将Binder机制模型以代码的形式具体是现在Android中\n\n### 相关基础知识\n#### 进程空间划分\n- 一个进程空间分为**用户空间**&**内核空间**，即把进程内 **用户**&**内核 **隔离开来\n- 二者区别\n  1. 进程间，用户空间的数据==不可共享==，用户空间=不可共享空间\n  2. 进程间，内核空间的数据==可共享==，内核空间=可共享空间\n> ==所有进程共用一个内核空间==\n- 进程内**用户空间**&**内核空间**进行交互，需要通过系统调用，主要通过函数：\n> 1.  copy_from_user（）：将用户空间的数据拷贝到内核空间\n> 2.  copy_to_user（）：将内核空间的数据拷贝到用户空间\n\n![Linux跨进程通信.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/Linux%E8%B7%A8%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1.png?raw=true)\n\n#### 进程隔离 & 跨进程通信（IPC）\n- 进程隔离\n  - 为了保证安全性&独立性，一个进程不能直接操作或者访问另一个进程，即Android中的进程是相互独立、隔离的\n- 跨进程通信（IPC）\n  - 进程间需要进行数据交换、通信\n- 跨进程通信基本原理\n![跨进程原理.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/%E8%B7%A8%E8%BF%9B%E7%A8%8B%E5%8E%9F%E7%90%86.png?raw=true)\n\n> 1.而Binder的作用是：连接两个进程，实现mmap()系统调用，主要负责创建数据接收的缓存空间和管理数据接收空间\n> 2.传统的跨进程通信需要拷贝数据2次，但Binder机制只需1次，主要使用到了内存映射\n\n#### 内存映射\n\n### Binder跨进程通信机制——模型\n该模型基于C\\S模式（Client-Service）\n![C\\S模型原理.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/C%5CS%E6%A8%A1%E5%9E%8B%E5%8E%9F%E7%90%86.png?raw=true)\n\n| 角色      | 作用    |  备注 |\n| :-------: | :-------- | ----- |\n| Client进程| 使用服务的进程 | APP |\n| Service进程| 提供服务的基础|   服务器端 |\n| ServiceManager进程| 管理Service注册与查询（将字符形式的Binder名字，转化成Client中对该Binder的引用） |   类似路由器|\n| Binder驱动 |一种虚拟设备驱动，是连接Service进程、Client进行和ServiceManager的桥梁，具体作用为：</br>1.传递跨进程的数据：通过内存映射</br>2.实现线程控制：采用Binder线程池，并由Binder驱动自身进行管理|Binder驱动持有每个Server进程在内核空间中的Binder实体，并给Client进程提供Binder实体的引用|\n\n### Binder驱动的作用&原理\n作用：连接Service进程、Client进程和ServiceManager桥梁\n原理：内存映射，即内部调用mmap（）函数\n实际用途：1.创建数据接收的缓存空间；2.地址映射\n\n## ActivityThread工作原理\n\n## Activity的启动流程\n\n## Android类加载器\n\n## View的绘制流程\n\n### MeasureSpec为何高两位代表测量模式，而不拆成两个参数进行传递？\n\n## View和ViewGroup事件分发\n\n## SurfaceView和View的区别\n\n## Android动画\n\n## requestLayout，invalidate，postInvalidate区别与联系\n\n## 多线程\n\n## 线程池\n\n## ThreadLocal\n\n## Synchronized原理\n\n## Volatile实现原理\n\n## Handler消息机制\n\n## AsyncTask源码分析\n\n## HashMap原理，Hash碰撞，自动扩容\n\n## Retrofit源码分析\n\n## Glide缓存源码，加载原理\n\n## 常用设计模式以及使用场景\n\n## 常用排序算法\n\n## 常用加解密算法\n\n## 图片的二次采样\n\n## Serializable 和Parcelable的区别\n\n## jvm垃圾回收机制\n\n## ANR信息收集\n\n## RecyclerView和ListView详解，局部刷线\n\n## Android两种虚拟机的联系与区别\n\n## APK打包流程\n\n## APK安装流程\n\n## APK瘦身\n\n## 引用类型\n- 强\n- 软\n- 弱\n\n## Fragment懒加载，ViewPager缓存机制\n\n## Java中反射、注解的理解\n\n## LruCache\n\n## 小程序实现原理\n\n",[[1555145105818,["poul@pouldeMBP.lan",[[1,1939,"\n"]],[1937,1937],[1938,1938]]],[1555145105970,["poul@pouldeMBP.lan",[[1,1940,"\n"]],[1938,1938],[1939,1939]]],[1555145152441,["poul@pouldeMBP.lan",[[1,1939,"![944365-65a5b17426aed424.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/944365-65a5b17426aed424.png?raw=true)"]],[1939,1939],[2066,2066]]],[1555145157190,["poul@pouldeMBP.lan",[[-1,1941,"944365-65a5b17426aed424"]],[1941,1964],[1941,1941]]],[1555145268006,["poul@pouldeMBP.lan",[[1,2045,"\n"]],[2044,2044],[2045,2045]]],[1555145268143,["poul@pouldeMBP.lan",[[1,2046,"\n"]],[2045,2045],[2046,2046]]],[1555145268479,["poul@pouldeMBP.lan",[[1,2046,"![944365-d3c78b193c3e8a38.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/944365-d3c78b193c3e8a38.png?raw=true)"]],[2046,2046],[2173,2173]]],[1555145270630,["poul@pouldeMBP.lan",[[-1,2045,"\n"]],[2044,2044],[2043,2043]]],[1555145273122,["poul@pouldeMBP.lan",[[1,2173,"\n"]],[2172,2172],[2173,2173]]],[1555145273604,["poul@pouldeMBP.lan",[[1,2174,"\n"]],[2173,2173],[2174,2174]]],[1555145279453,["poul@pouldeMBP.lan",[[1,1941,"yuan"]],[1941,1941],[1945,1945]]],[1555145280153,["poul@pouldeMBP.lan",[[-1,1941,"yuan"]],[1945,1945],[1941,1941]]],[1555145281071,["poul@pouldeMBP.lan",[[1,1941,"yuan"]],[1941,1941],[1945,1945]]],[1555145282020,["poul@pouldeMBP.lan",[[-1,1941,"yuan"]],[1945,1945],[1941,1941]]],[1555145284887,["poul@pouldeMBP.lan",[[1,1941,"原理"]],[1941,1941],[1943,1943]]],[1555145290864,["poul@pouldeMBP.lan",[[-1,2049,"944365-d3c78b193c3e8a38"],[1,2072,"原理"]],[2049,2049],[2051,2051]]]],null,"poul@pouldeMBP.lan"],["44dfb938-b75a-4ac3-93ae-43a4e8795b0d",1555299023174,"# Android面试题\n\n\n## Binder机制\n### 什么是Binder\n![Binderæ¯ä»ä¹.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/Binder%E6%98%AF%E4%BB%80%E4%B9%88.png?raw=true)\n- 从机制、模型角度讲\n  - Binder是一种Android中实现跨进程通信（IPC）的方式，即Binder机制模型\n  - 在Android中实现跨进程通信\n- 从模型结构、组成讲\n  - Binder是一种虚拟的物理设备驱动，即Binder驱动\n  - 连接Service进程、Client进程和ServiceManager进程\n- 从Android代码的实现角度讲\n  - Binder是个类，实现了IBinder接口，即Binder类\n  - 将Binder机制模型以代码的形式具体是现在Android中\n\n### 相关基础知识\n#### 进程空间划分\n- 一个进程空间分为**用户空间**&**内核空间**，即把进程内 **用户**&**内核 **隔离开来\n- 二者区别\n  1. 进程间，用户空间的数据==不可共享==，用户空间=不可共享空间\n  2. 进程间，内核空间的数据==可共享==，内核空间=可共享空间\n> ==所有进程共用一个内核空间==\n- 进程内**用户空间**&**内核空间**进行交互，需要通过系统调用，主要通过函数：\n> 1.  copy_from_user（）：将用户空间的数据拷贝到内核空间\n> 2.  copy_to_user（）：将内核空间的数据拷贝到用户空间\n\n![Linux跨进程通信.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/Linux%E8%B7%A8%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1.png?raw=true)\n\n#### 进程隔离 & 跨进程通信（IPC）\n- 进程隔离\n  - 为了保证安全性&独立性，一个进程不能直接操作或者访问另一个进程，即Android中的进程是相互独立、隔离的\n- 跨进程通信（IPC）\n  - 进程间需要进行数据交换、通信\n- 跨进程通信基本原理\n![跨进程原理.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/%E8%B7%A8%E8%BF%9B%E7%A8%8B%E5%8E%9F%E7%90%86.png?raw=true)\n\n> 1.而Binder的作用是：连接两个进程，实现mmap()系统调用，主要负责创建数据接收的缓存空间和管理数据接收空间\n> 2.传统的跨进程通信需要拷贝数据2次，但Binder机制只需1次，主要使用到了内存映射\n\n#### 内存映射\n\n### Binder跨进程通信机制——模型\n该模型基于C\\S模式（Client-Service）\n![C\\S模型原理.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/C%5CS%E6%A8%A1%E5%9E%8B%E5%8E%9F%E7%90%86.png?raw=true)\n\n| 角色      | 作用    |  备注 |\n| :-------: | :-------- | ----- |\n| Client进程| 使用服务的进程 | APP |\n| Service进程| 提供服务的基础|   服务器端 |\n| ServiceManager进程| 管理Service注册与查询（将字符形式的Binder名字，转化成Client中对该Binder的引用） |   类似路由器|\n| Binder驱动 |一种虚拟设备驱动，是连接Service进程、Client进行和ServiceManager的桥梁，具体作用为：</br>1.传递跨进程的数据：通过内存映射</br>2.实现线程控制：采用Binder线程池，并由Binder驱动自身进行管理|Binder驱动持有每个Server进程在内核空间中的Binder实体，并给Client进程提供Binder实体的引用|\n\n### Binder驱动的作用&原理\n作用：连接Service进程、Client进程和ServiceManager桥梁\n原理：内存映射，即内部调用mmap（）函数\n实际用途：1.创建数据接收的缓存空间；2.地址映射\n\n![原理.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/944365-65a5b17426aed424.png?raw=true)\n\n![原理.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/944365-d3c78b193c3e8a38.png?raw=true)\n\n\n## ActivityThread工作原理\n\n## Activity的启动流程\n\n## Android类加载器\n\n## View的绘制流程\n\n### MeasureSpec为何高两位代表测量模式，而不拆成两个参数进行传递？\n\n## View和ViewGroup事件分发\n\n## SurfaceView和View的区别\n\n## Android动画\n\n## requestLayout，invalidate，postInvalidate区别与联系\n\n## 多线程\n\n## 线程池\n\n## ThreadLocal\n\n## Synchronized原理\n\n## Volatile实现原理\n\n## Handler消息机制\n\n## AsyncTask源码分析\n\n## HashMap原理，Hash碰撞，自动扩容\n\n## Retrofit源码分析\n\n## Glide缓存源码，加载原理\n\n## 常用设计模式以及使用场景\n\n## 常用排序算法\n\n## 常用加解密算法\n\n## 图片的二次采样\n\n## Serializable 和Parcelable的区别\n\n## jvm垃圾回收机制\n\n## ANR信息收集\n\n## RecyclerView和ListView详解，局部刷线\n\n## Android两种虚拟机的联系与区别\n\n## APK打包流程\n\n## APK安装流程\n\n## APK瘦身\n\n## 引用类型\n- 强\n- 软\n- 弱\n\n## Fragment懒加载，ViewPager缓存机制\n\n## Java中反射、注解的理解\n\n## LruCache\n\n## 小程序实现原理\n\n",[[1555298997317,["poul@pouldeMBP.lan",[[-1,499," "]],[500,500],[499,499]]],[1555317557591,["poul@pouldeMBP.lan",[[-1,49,"æ¯ä»ä¹"],[1,58,"机制"]],[49,49],[51,51]]],[1555317779933,["poul@pouldeMBP.lan",[[1,2171,"\n"]],[2169,2169],[2170,2170]]],[1555317784120,["poul@pouldeMBP.lan",[[1,2170,"mainfan"]],[2170,2170],[2177,2177]]],[1555317784618,["poul@pouldeMBP.lan",[[-1,2175,"an"]],[2177,2177],[2175,2175]]],[1555317787116,["poul@pouldeMBP.lan",[[1,2174,"方法："]],[2174,2174],[2177,2177]]],[1555317788054,["poul@pouldeMBP.lan",[[1,2179,"\n"]],[2177,2177],[2178,2178]]],[1555317789492,["poul@pouldeMBP.lan",[[1,2178,"```"]],[2178,2178],[2181,2181]]],[1555317789540,["poul@pouldeMBP.lan",[[1,2181,"language\n```\n"]],[2181,2181],[2181,2189]]],[1555317790116,["poul@pouldeMBP.lan",[[-1,2181,"language"],[1,2189,"j"]],[2181,2189],[2182,2182]]],[1555317790490,["poul@pouldeMBP.lan",[[1,2182,"ava"]],[2182,2182],[2185,2185]]],[1555317790676,["poul@pouldeMBP.lan",[[1,2186,"\n"]],[2185,2185],[2186,2186]]],[1555317807184,["poul@pouldeMBP.lan",[[1,2186,"public static void main(String[] args) {\n    Trace.traceBegin(Trace.TRACE_TAG_ACTIVITY_MANAGER, \"ActivityThreadMain\");    // CloseGuard defaults to true and can be quite spammy.  We\n // disable it here, but selectively enable it later (via // StrictMode) on debug builds, but using DropBox, not logs.  CloseGuard.setEnabled(false);    Environment.initForCurrentUser();    // Set the reporter for event logging in libcore\n  EventLogger.setReporter(new EventLoggingReporter());    // Make sure TrustedCertificateStore looks in the right place for CA certificates\n  final File configDir = Environment.getUserConfigDirectory(UserHandle.myUserId());\n  TrustedCertificateStore.setDefaultUserDirectory(configDir);    Process.setArgV0(\"<pre-initialized>\");    Looper.prepareMainLooper();    // Find the value for {@link #PROC_START_SEQ_IDENT} if provided on the command line.\n // It will be in the format \"seq=114\"  long startSeq = 0;\n if (args != null) {\n        for (int i = args.length - 1; i >= 0; --i) {\n            if (args[i] != null && args[i].startsWith(PROC_START_SEQ_IDENT)) {\n                startSeq = Long.parseLong(\n                        args[i].substring(PROC_START_SEQ_IDENT.length()));\n  }\n        }\n    }\n    ActivityThread thread = new ActivityThread();\n  thread.attach(false, startSeq);   if (sMainThreadHandler == null) {\n        sMainThreadHandler = thread.getHandler();\n  }\n\n    if (false) {\n        Looper.myLooper().setMessageLogging(new\n  LogPrinter(Log.DEBUG, \"ActivityThread\"));\n  }\n\n    // End of event ActivityThreadMain.\n  Trace.traceEnd(Trace.TRACE_TAG_ACTIVITY_MANAGER);\n  Looper.loop();   throw new RuntimeException(\"Main thread loop unexpectedly exited\"); }"]],[2186,2186],[3873,3873]]],[1555317819536,["poul@pouldeMBP.lan",[[-1,2186,"public static void main(String[] args) {\n    Trace.traceBegin(Trace.TRACE_TAG_ACTIVITY_MANAGER, \"ActivityThreadMain\");    // CloseGuard defaults to true and can be quite spammy.  We\n // disable it here, but selectively enable it later (via // StrictMode) on debug builds, but using DropBox, not logs.  CloseGuard.setEnabled(false);    Environment.initForCurrentUser();    // Set the reporter for event logging in libcore\n  EventLogger.setReporter(new EventLoggingReporter());    // Make sure TrustedCertificateStore looks in the right place for CA certificates\n  final File configDir = Environment.getUserConfigDirectory(UserHandle.myUserId());\n  TrustedCertificateStore.setDefaultUserDirectory(configDir);    Process.setArgV0(\"<pre-initialized>\");    Looper.prepareMainLooper();    // Find the value for {@link #PROC_START_SEQ_IDENT} if provided on the command line.\n // It will be in the format \"seq=114\"  long startSeq = 0;\n if (args != null) {\n        for (int i = args.length - 1; i >= 0; --i) {\n            if (args[i] != null && args[i].startsWith(PROC_START_SEQ_IDENT)) {\n                startSeq = Long.parseLong(\n                        args[i].substring(PROC_START_SEQ_IDENT.length()));\n  }\n        }\n    }\n    ActivityThread thread = new ActivityThread();\n  thread.attach(false, startSeq);   if (sMainThreadHandler == null) {\n        sMainThreadHandler = thread.getHandler();\n  }\n\n    if (false) {\n        Looper.myLooper().setMessageLogging(new\n  LogPrinter(Log.DEBUG, \"ActivityThread\"));\n  }\n\n    // End of event ActivityThreadMain.\n  Trace.traceEnd(Trace.TRACE_TAG_ACTIVITY_MANAGER);\n  Looper.loop();   throw new RuntimeException(\"Main thread loop unexpectedly exited\"); }"]],[3873,3873],[2186,2186]]],[1555317833124,["poul@pouldeMBP.lan",[[1,2186,"public static void main(String[] args) {\n    Trace.traceBegin(Trace.TRACE_TAG_ACTIVITY_MANAGER, \"ActivityThreadMain\");    // CloseGuard defaults to true and can be quite spammy.  We\n // disable it here, but selectively enable it later (via // StrictMode) on debug builds, but using DropBox, not logs.  CloseGuard.setEnabled(false);    Environment.initForCurrentUser();    // Set the reporter for event logging in libcore\n  EventLogger.setReporter(new EventLoggingReporter());    // Make sure TrustedCertificateStore looks in the right place for CA certificates\n  final File configDir = Environment.getUserConfigDirectory(UserHandle.myUserId());\n  TrustedCertificateStore.setDefaultUserDirectory(configDir);    Process.setArgV0(\"<pre-initialized>\");    Looper.prepareMainLooper();    // Find the value for {@link #PROC_START_SEQ_IDENT} if provided on the command line.\n // It will be in the format \"seq=114\"  long startSeq = 0;\n if (args != null) {\n        for (int i = args.length - 1; i >= 0; --i) {\n            if (args[i] != null && args[i].startsWith(PROC_START_SEQ_IDENT)) {\n                startSeq = Long.parseLong(\n                        args[i].substring(PROC_START_SEQ_IDENT.length()));\n  }\n        }\n    }\n    ActivityThread thread = new ActivityThread();\n  thread.attach(false, startSeq);   if (sMainThreadHandler == null) {\n        sMainThreadHandler = thread.getHandler();\n  }\n\n    if (false) {\n        Looper.myLooper().setMessageLogging(new\n  LogPrinter(Log.DEBUG, \"ActivityThread\"));\n  }\n\n    // End of event ActivityThreadMain.\n  Trace.traceEnd(Trace.TRACE_TAG_ACTIVITY_MANAGER);\n  Looper.loop();   throw new RuntimeException(\"Main thread loop unexpectedly exited\"); }"]],[2186,2186],[3873,3873]]],[1555317838206,["poul@pouldeMBP.lan",[[1,2308,"\n    "]],[2308,2308],[2313,2313]]],[1555317841170,["poul@pouldeMBP.lan",[[1,2374,"\n "]],[2374,2374],[2376,2376]]],[1555317841794,["poul@pouldeMBP.lan",[[-1,2375," "]],[2376,2376],[2375,2375]]],[1555317842258,["poul@pouldeMBP.lan",[[-1,2374,"\n"]],[2375,2375],[2374,2374]]],[1555317843389,["poul@pouldeMBP.lan",[[1,2374,"    "]],[2374,2374],[2378,2378]]],[1555317843938,["poul@pouldeMBP.lan",[[-1,2377," "]],[2378,2378],[2377,2377]]],[1555317904814,[null,[[-1,2177,"f"],[1,2178,"\n"],[-1,3885,"\n"]],[2177,2177],[3885,3885]]],[1555317904814,[null,[[1,2177,"f"],[-1,2177,"\n"],[1,3885,"\n"]],[3885,3885],[2177,2177]]],[1555317848157,["poul@pouldeMBP.lan",[[1,2434,"\n    "]],[2434,2434],[2439,2439]]],[1555317855639,["poul@pouldeMBP.lan",[[1,2501,"    "]],[2501,2501],[2505,2505]]],[1555317859234,["poul@pouldeMBP.lan",[[-1,2503,"  "]],[2505,2505],[2503,2503]]],[1555317862370,["poul@pouldeMBP.lan",[[1,2536,"\n    "]],[2536,2536],[2541,2541]]],[1555317866688,["poul@pouldeMBP.lan",[[1,2578,"\n    "]],[2578,2578],[2583,2583]]],[1555317869130,["poul@pouldeMBP.lan",[[1,2634,"  "]],[2634,2634],[2636,2636]]],[1555317871417,["poul@pouldeMBP.lan",[[1,2705,"    "]],[2705,2705],[2709,2709]]],[1555317873922,["poul@pouldeMBP.lan",[[1,2692,"\n    "]],[2692,2692],[2697,2697]]],[1555317878823,["poul@pouldeMBP.lan",[[-1,2709,"     "]],[2714,2714],[2709,2709]]],[1555317879465,["poul@pouldeMBP.lan",[[1,2709," "]],[2709,2709],[2710,2710]]],[1555317883013,["poul@pouldeMBP.lan",[[1,2781,"  "]],[2781,2781],[2783,2783]]],[1555317884503,["poul@pouldeMBP.lan",[[1,2868,"  "]],[2868,2868],[2870,2870]]],[1555317887141,["poul@pouldeMBP.lan",[[1,2932,"\n  "]],[2932,2932],[2935,2935]]],[1555317890553,["poul@pouldeMBP.lan",[[-1,2932,"\n  "]],[2935,2935],[2932,2932]]],[1555317891227,["poul@pouldeMBP.lan",[[-1,2868,"  "]],[2870,2870],[2868,2868]]],[1555317893077,["poul@pouldeMBP.lan",[[1,2867,"  "]],[2867,2867],[2869,2869]]],[1555317895604,["poul@pouldeMBP.lan",[[1,2932,"\n    "]],[2932,2932],[2937,2937]]],[1555317898231,["poul@pouldeMBP.lan",[[1,2979,"\n    "]],[2979,2979],[2984,2984]]],[1555317900188,["poul@pouldeMBP.lan",[[1,3015,"\n    "]],[3015,3015],[3020,3020]]],[1555317903320,["poul@pouldeMBP.lan",[[1,3106,"  "]],[3106,3106],[3108,3108]]],[1555317964778,[null,[[-1,2177,"f"],[1,2178,"\n"],[-1,3930,"\n"]],[2177,2177],[3930,3930]]],[1555317964778,[null,[[1,2177,"f"],[-1,2177,"\n"],[1,3930,"\n"]],[3930,3930],[2177,2177]]],[1555317906147,["poul@pouldeMBP.lan",[[1,3108,"  "]],[3108,3108],[3110,3110]]],[1555317907073,["poul@pouldeMBP.lan",[[1,3171,"  "]],[3171,3171],[3173,3173]]],[1555317907958,["poul@pouldeMBP.lan",[[-1,3172," "]],[3173,3173],[3172,3172]]],[1555317909935,["poul@pouldeMBP.lan",[[-1,3109," "]],[3110,3110],[3109,3109]]],[1555317916851,["poul@pouldeMBP.lan",[[1,3443,"          "]],[3443,3443],[3453,3453]]],[1555317921187,["poul@pouldeMBP.lan",[[1,3524,"  "]],[3524,3524],[3526,3526]]],[1555317922563,["poul@pouldeMBP.lan",[[-1,3524,"  "]],[3526,3526],[3524,3524]]],[1555317923840,["poul@pouldeMBP.lan",[[1,3523,"  "]],[3523,3523],[3525,3525]]],[1555317925619,["poul@pouldeMBP.lan",[[1,3645,"  "]],[3645,3645],[3647,3647]]],[1555317928735,["poul@pouldeMBP.lan",[[1,3717,"      "]],[3717,3717],[3723,3723]]],[1555317930645,["poul@pouldeMBP.lan",[[1,3767,"  "]],[3767,3767],[3769,3769]]],[1555317932416,["poul@pouldeMBP.lan",[[1,3814,"  "]],[3814,3814],[3816,3816]]],[1555317933699,["poul@pouldeMBP.lan",[[1,3868,"  "]],[3868,3868],[3870,3870]]],[1555317935969,["poul@pouldeMBP.lan",[[1,3887,"\n    "]],[3887,3887],[3892,3892]]],[1555317939322,["poul@pouldeMBP.lan",[[1,3960,"\n    "]],[3960,3960],[3965,3965]]],[1555317942003,["poul@pouldeMBP.lan",[[-1,3961,"    "]],[3965,3965],[3961,3961]]],[1555317949681,["poul@pouldeMBP.lan",[[-1,2499,"    "]],[2503,2503],[2499,2499]]],[1555317954897,["poul@pouldeMBP.lan",[[1,2499,"    "]],[2499,2499],[2503,2503]]],[1555317958148,["poul@pouldeMBP.lan",[[-1,2499,"    "]],[2503,2503],[2499,2499]]],[1555318024789,[null,[[-1,2177,"f"],[1,2178,"\n"],[1,3164,"   "],[-1,3166," "],[-1,3437,"}\n"],[1,3449,"}\n"],[-1,3517,"th"],[1,3521,"th"],[-1,3639,"}\n"],[1,3643,"}\n"],[-1,3711,"Lo"],[1,3719,"Lo"],[-1,3761,"}\n"],[1,3765,"}\n"],[1,3808,"  "],[-1,3810,"  "],[1,3862,"  "],[-1,3864,"  "],[-1,3881,"th"],[1,3888,"th"],[-1,3954,"}"],[1,3956,"}"],[-1,3960,"\n"]],[2177,2177],[3960,3960]]],[1555318024789,[null,[[1,2177,"f"],[-1,2177,"\n"],[-1,3164,"   "],[1,3169," "],[1,3439,"}\n"],[-1,3449,"}\n"],[1,3519,"th"],[-1,3521,"th"],[1,3641,"}\n"],[-1,3643,"}\n"],[1,3713,"Lo"],[-1,3719,"Lo"],[1,3763,"}\n"],[-1,3765,"}\n"],[-1,3810,"  "],[1,3814,"  "],[-1,3864,"  "],[1,3868,"  "],[1,3883,"th"],[-1,3888,"th"],[1,3956,"}"],[-1,3957,"}"],[1,3962,"\n"]],[3960,3960],[2177,2177]]],[1555317967226,["poul@pouldeMBP.lan",[[1,2499,"\n    "]],[2499,2499],[2504,2504]]]],null,"poul@pouldeMBP.lan"],["a77fa016-f59c-4a99-862f-d6bdd93916c7",1555392780735,"# Android面试题\n\n\n## Binder机制\n### 什么是Binder\n![Binder机制.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/Binder%E6%98%AF%E4%BB%80%E4%B9%88.png?raw=true)\n- 从机制、模型角度讲\n  - Binder是一种Android中实现跨进程通信（IPC）的方式，即Binder机制模型\n  - 在Android中实现跨进程通信\n- 从模型结构、组成讲\n  - Binder是一种虚拟的物理设备驱动，即Binder驱动\n  - 连接Service进程、Client进程和ServiceManager进程\n- 从Android代码的实现角度讲\n  - Binder是个类，实现了IBinder接口，即Binder类\n  - 将Binder机制模型以代码的形式具体是现在Android中\n\n### 相关基础知识\n#### 进程空间划分\n- 一个进程空间分为**用户空间**&**内核空间**，即把进程内 **用户**&**内核**隔离开来\n- 二者区别\n  1. 进程间，用户空间的数据==不可共享==，用户空间=不可共享空间\n  2. 进程间，内核空间的数据==可共享==，内核空间=可共享空间\n> ==所有进程共用一个内核空间==\n- 进程内**用户空间**&**内核空间**进行交互，需要通过系统调用，主要通过函数：\n> 1.  copy_from_user（）：将用户空间的数据拷贝到内核空间\n> 2.  copy_to_user（）：将内核空间的数据拷贝到用户空间\n\n![Linux跨进程通信.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/Linux%E8%B7%A8%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1.png?raw=true)\n\n#### 进程隔离 & 跨进程通信（IPC）\n- 进程隔离\n  - 为了保证安全性&独立性，一个进程不能直接操作或者访问另一个进程，即Android中的进程是相互独立、隔离的\n- 跨进程通信（IPC）\n  - 进程间需要进行数据交换、通信\n- 跨进程通信基本原理\n![跨进程原理.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/%E8%B7%A8%E8%BF%9B%E7%A8%8B%E5%8E%9F%E7%90%86.png?raw=true)\n\n> 1.而Binder的作用是：连接两个进程，实现mmap()系统调用，主要负责创建数据接收的缓存空间和管理数据接收空间\n> 2.传统的跨进程通信需要拷贝数据2次，但Binder机制只需1次，主要使用到了内存映射\n\n#### 内存映射\n\n### Binder跨进程通信机制——模型\n该模型基于C\\S模式（Client-Service）\n![C\\S模型原理.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/C%5CS%E6%A8%A1%E5%9E%8B%E5%8E%9F%E7%90%86.png?raw=true)\n\n| 角色      | 作用    |  备注 |\n| :-------: | :-------- | ----- |\n| Client进程| 使用服务的进程 | APP |\n| Service进程| 提供服务的基础|   服务器端 |\n| ServiceManager进程| 管理Service注册与查询（将字符形式的Binder名字，转化成Client中对该Binder的引用） |   类似路由器|\n| Binder驱动 |一种虚拟设备驱动，是连接Service进程、Client进行和ServiceManager的桥梁，具体作用为：</br>1.传递跨进程的数据：通过内存映射</br>2.实现线程控制：采用Binder线程池，并由Binder驱动自身进行管理|Binder驱动持有每个Server进程在内核空间中的Binder实体，并给Client进程提供Binder实体的引用|\n\n### Binder驱动的作用&原理\n作用：连接Service进程、Client进程和ServiceManager桥梁\n原理：内存映射，即内部调用mmap（）函数\n实际用途：1.创建数据接收的缓存空间；2.地址映射\n\n![原理.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/944365-65a5b17426aed424.png?raw=true)\n\n![原理.png](https://github.com/KBiteMan/AndroidSources/blob/master/img/944365-d3c78b193c3e8a38.png?raw=true)\n\n\n## ActivityThread工作原理\nmain方法：\n```java\npublic static void main(String[] args) {\n    Trace.traceBegin(Trace.TRACE_TAG_ACTIVITY_MANAGER, \"ActivityThreadMain\");    \n    // CloseGuard defaults to true and can be quite spammy.  We\n    // disable it here, but selectively enable it later (via \n    // StrictMode) on debug builds, but using DropBox, not logs.\n    CloseGuard.setEnabled(false);    \n    Environment.initForCurrentUser();    \n    // Set the reporter for event logging in libcore\n    EventLogger.setReporter(new EventLoggingReporter());    \n    // Make sure TrustedCertificateStore looks in the right place for CA certificates\n    final File configDir = Environment.getUserConfigDirectory(UserHandle.myUserId());\n    TrustedCertificateStore.setDefaultUserDirectory(configDir);    \n    Process.setArgV0(\"<pre-initialized>\");    \n    Looper.prepareMainLooper();    \n    // Find the value for {@link #PROC_START_SEQ_IDENT} if provided on the command line.\n    // It will be in the format \"seq=114\"  long startSeq = 0;\n    if (args != null) {\n        for (int i = args.length - 1; i >= 0; --i) {\n            if (args[i] != null && args[i].startsWith(PROC_START_SEQ_IDENT)) {\n                startSeq = Long.parseLong(\n                        args[i].substring(PROC_START_SEQ_IDENT.length()));\n            }\n        }\n    }\n    ActivityThread thread = new ActivityThread();\n    thread.attach(false, startSeq);   if (sMainThreadHandler == null) {\n        sMainThreadHandler = thread.getHandler();\n    }\n\n    if (false) {\n        Looper.myLooper().setMessageLogging(new\n        LogPrinter(Log.DEBUG, \"ActivityThread\"));\n    }\n\n    // End of event ActivityThreadMain.\n    Trace.traceEnd(Trace.TRACE_TAG_ACTIVITY_MANAGER);\n    Looper.loop();   \n    throw new RuntimeException(\"Main thread loop unexpectedly exited\"); \n}\n```\n\n\n## Activity的启动流程\n\n## Android类加载器\n\n## View的绘制流程\n\n### MeasureSpec为何高两位代表测量模式，而不拆成两个参数进行传递？\n\n## View和ViewGroup事件分发\n\n## SurfaceView和View的区别\n\n## Android动画\n\n## requestLayout，invalidate，postInvalidate区别与联系\n\n## 多线程\n\n## 线程池\n\n## ThreadLocal\n\n## Synchronized原理\n\n## Volatile实现原理\n\n## Handler消息机制\n\n## AsyncTask源码分析\n\n## HashMap原理，Hash碰撞，自动扩容\n\n## Retrofit源码分析\n\n## Glide缓存源码，加载原理\n\n## 常用设计模式以及使用场景\n\n## 常用排序算法\n\n## 常用加解密算法\n\n## 图片的二次采样\n\n## Serializable 和Parcelable的区别\n\n## jvm垃圾回收机制\n\n## ANR信息收集\n\n## RecyclerView和ListView详解，局部刷线\n\n## Android两种虚拟机的联系与区别\n\n## APK打包流程\n\n## APK安装流程\n\n## APK瘦身\n\n## 引用类型\n- 强\n- 软\n- 弱\n\n## Fragment懒加载，ViewPager缓存机制\n\n## Java中反射、注解的理解\n\n## LruCache\n\n## 小程序实现原理\n\n",[[1555392730342,["poul@pouldeMBP.lan",[[1,4616,"\n"]],[4614,4614],[4615,4615]]],[1555392731707,["poul@pouldeMBP.lan",[[1,4615,"原理\n双向链表"]],[4615,4615],[4622,4622]]],[1555392746261,["poul@pouldeMBP.lan",[[-1,4298,"## Retrofit源码分析\n\n## Glide缓存源码，加载原理"]],[4298,4332],[4298,4298]]],[1555392746928,["poul@pouldeMBP.lan",[[-1,4299,"\n"]],[4298,4298],[4297,4297]]],[1555392747414,["poul@pouldeMBP.lan",[[-1,4298,"\n"]],[4297,4297],[4296,4296]]],[1555392756963,["poul@pouldeMBP.lan",[[1,4186,"\n"]],[4184,4184],[4185,4185]]],[1555392757236,["poul@pouldeMBP.lan",[[1,4187,"\n"]],[4185,4185],[4186,4186]]],[1555392764624,["poul@pouldeMBP.lan",[[1,4186,"## 进程管理机制"]],[4186,4186],[4195,4195]]],[1555392765330,["poul@pouldeMBP.lan",[[1,4197,"\n"]],[4195,4195],[4196,4196]]],[1555392765803,["poul@pouldeMBP.lan",[[1,4198,"\n"]],[4196,4196],[4197,4197]]],[1555392767092,["poul@pouldeMBP.lan",[[1,4197,"## "]],[4197,4197],[4200,4200]]],[1555392768645,["poul@pouldeMBP.lan",[[1,4199,"#"]],[4200,4200],[4201,4201]]],[1555392770813,["poul@pouldeMBP.lan",[[-1,4199,"# "]],[4201,4201],[4199,4199]]],[1555393198099,["poul@pouldeMBP.lan",[[1,4199," 进程报货"]],[4199,4199],[4204,4204]]],[1555393198724,["poul@pouldeMBP.lan",[[-1,4202,"报货"]],[4204,4204],[4202,4202]]],[1555393208900,["poul@pouldeMBP.lan",[[1,4202,"保护"]],[4202,4202],[4204,4204]]],[1555393209190,["poul@pouldeMBP.lan",[[-1,4203,"护"]],[4204,4204],[4203,4203]]],[1555393210584,["poul@pouldeMBP.lan",[[1,4203,"活"]],[4203,4203],[4204,4204]]],[1555393211135,["poul@pouldeMBP.lan",[[1,4206,"\n"]],[4204,4204],[4205,4205]]],[1555393222559,["poul@pouldeMBP.lan",[[1,4205,"进程的优先级是什么？"]],[4205,4205],[4215,4215]]],[1555393222774,["poul@pouldeMBP.lan",[[1,4217,"\n"]],[4215,4215],[4216,4216]]],[1555393229021,["poul@pouldeMBP.lan",[[1,4216,"分****"]],[4216,4216],[4219,4219]]],[1555393239902,["poul@pouldeMBP.lan",[[1,4219,"黑、白、灰"]],[4219,4219],[4224,4224]]],[1555393246451,["poul@pouldeMBP.lan",[[1,4226,"三种收到保活"]],[4226,4226],[4232,4232]]],[1555393246905,["poul@pouldeMBP.lan",[[1,4234,"\n"]],[4232,4232],[4233,4233]]],[1555393251143,["poul@pouldeMBP.lan",[[-1,4228,"收到"]],[4230,4230],[4228,4228]]],[1555393254159,["poul@pouldeMBP.lan",[[1,4228,"手段"]],[4228,4228],[4230,4230]]],[1555393260119,["poul@pouldeMBP.lan",[[1,4235,"\n"]],[4232,4232],[4233,4233]]],[1555393274185,["poul@pouldeMBP.lan",[[1,4233,"- 黑：不同App进程。"]],[4233,4233],[4245,4245]]],[1555393274794,["poul@pouldeMBP.lan",[[-1,4244,"。"]],[4245,4245],[4244,4244]]],[1555393276074,["poul@pouldeMBP.lan",[[1,4244,"，通过"]],[4244,4244],[4247,4247]]],[1555393278325,["poul@pouldeMBP.lan",[[-1,4245,"通过"]],[4247,4247],[4245,4245]]],[1555393283285,["poul@pouldeMBP.lan",[[1,4245,"用广播相互保活"]],[4245,4245],[4252,4252]]],[1555393285592,["poul@pouldeMBP.lan",[[-1,4250,"保活"]],[4252,4252],[4250,4250]]],[1555393286997,["poul@pouldeMBP.lan",[[1,4250,"唤醒"]],[4250,4250],[4252,4252]]],[1555393287775,["poul@pouldeMBP.lan",[[1,4253,"- \n"]],[4252,4252],[4255,4255]]],[1555393302698,["poul@pouldeMBP.lan",[[1,4255,"白：启动前台Service"]],[4255,4255],[4268,4268]]],[1555393303009,["poul@pouldeMBP.lan",[[1,4269,"- \n"]],[4268,4268],[4271,4271]]],[1555393308028,["poul@pouldeMBP.lan",[[1,4271,"黑："]],[4271,4271],[4273,4273]]],[1555393310964,["poul@pouldeMBP.lan",[[-1,4270," 黑："]],[4273,4273],[4270,4270]]],[1555393318616,["poul@pouldeMBP.lan",[[1,4270," 灰：利用系统"]],[4270,4270],[4277,4277]]],[1555393329464,["poul@pouldeMBP.lan",[[1,4277,"的漏洞启动前台Service"]],[4277,4277],[4291,4291]]],[1555393329941,["poul@pouldeMBP.lan",[[1,4292,"- \n"]],[4291,4291],[4294,4294]]],[1555393330283,["poul@pouldeMBP.lan",[[-1,4292,"- "]],[4294,4294],[4293,4293]]],[1555393337207,["poul@pouldeMBP.lan",[[1,4293,"### 黑色保活"]],[4293,4293],[4301,4301]]],[1555393338204,["poul@pouldeMBP.lan",[[1,4303,"\n"]],[4301,4301],[4302,4302]]],[1555393349081,["poul@pouldeMBP.lan",[[1,4302,"场景1：开机、"]],[4302,4302],[4309,4309]]],[1555393359722,["poul@pouldeMBP.lan",[[1,4308,"，网络切换"],[1,4309,"拍照、拍视频时候，利用系统产生的广播唤醒app\n\n场景2：接入第三方SDK也会唤醒相应的app进程，如微信sdk会唤醒微信，支付宝sdk会唤醒支付宝。由此发散开去，就会直接触发了下面的 场景3\n\n场景3：假如你手机里装了支付宝、淘宝、天猫、UC等阿里系的app，那么你打开任意一个阿里系的app后，有可能就顺便把其他阿里系的app给唤醒了。（只是拿阿里打个比方，其实BAT系都差不多）\n\n作者：xiangzhizhong\n链接：https://juejin.im/post/5b4617866fb9a04f8d6ba5ce\n来源：掘金\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[4302,4309],[4616,4616]]],[1555393361694,["poul@pouldeMBP.lan",[[1,4302,"- "]],[4302,4302],[4304,4304]]],[1555393364094,["poul@pouldeMBP.lan",[[1,4341,"- "]],[4341,4341],[4343,4343]]],[1555393366636,["poul@pouldeMBP.lan",[[1,4416,"- "]],[4416,4416],[4418,4418]]],[1555393368145,["poul@pouldeMBP.lan",[[-1,4415,"\n"]],[4415,4415],[4414,4414]]],[1555393369019,["poul@pouldeMBP.lan",[[-1,4340,"\n"]],[4340,4340],[4339,4339]]],[1555393375001,["poul@pouldeMBP.lan",[[-1,4512,"作者：xiangzhizhong\n链接：https://juejin.im/post/5b4617866fb9a04f8d6ba5ce\n来源：掘金\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[4512,4620],[4512,4512]]],[1555393377294,["poul@pouldeMBP.lan",[[-1,4513,"\n"]],[4512,4512],[4511,4511]]],[1555393378879,["poul@pouldeMBP.lan",[[1,4511,"### "]],[4511,4511],[4515,4515]]],[1555393385219,["poul@pouldeMBP.lan",[[1,4515,"白色保活"]],[4515,4515],[4519,4519]]],[1555393386176,["poul@pouldeMBP.lan",[[1,4521,"\n"]],[4519,4519],[4520,4520]]],[1555393393702,["poul@pouldeMBP.lan",[[1,4520,"白色保活手段非常简单，就是调用系统api启动一个前台的Service进程，这样会在系统的通知栏生成一个Notification，用来让用户知道有这样一个app在运行着，哪怕当前的app退到了后台。如下方的LBE和QQ音乐这样：、"]],[4520,4520],[4634,4634]]],[1555393394304,["poul@pouldeMBP.lan",[[-1,4632,"：、"]],[4634,4634],[4632,4632]]],[1555393395078,["poul@pouldeMBP.lan",[[1,4632,"。"]],[4632,4632],[4633,4633]]],[1555393573129,["poul@pouldeMBP.lan",[[1,4635,"\n"]],[4633,4633],[4634,4634]]],[1555393573273,["poul@pouldeMBP.lan",[[1,4636,"\n"]],[4634,4634],[4635,4635]]],[1555393574112,["poul@pouldeMBP.lan",[[-1,4636,"\n"]],[4635,4635],[4634,4634]]],[1555393576360,["poul@pouldeMBP.lan",[[1,4634,"### 回收"]],[4634,4634],[4640,4640]]],[1555393576930,["poul@pouldeMBP.lan",[[-1,4638,"回收"]],[4640,4640],[4638,4638]]],[1555393579690,["poul@pouldeMBP.lan",[[1,4638,"灰色保活"]],[4638,4638],[4642,4642]]],[1555393580031,["poul@pouldeMBP.lan",[[1,4644,"\n"]],[4642,4642],[4643,4643]]],[1555393580913,["poul@pouldeMBP.lan",[[1,4643,"灰色保活，这种保活手段是应用范围最广泛。它是利用系统的漏洞来启动一个前台的Service进程，与普通的启动方式区别在于，它不会在系统通知栏处出现一个Notification，看起来就如同运行着一个后台Service进程一样。这样做带来的好处就是，用户无法察觉到你运行着一个前台进程（因为看不到Notification）,但你的进程优先级又是高于普通后台进程的。那么如何利用系统的漏洞呢，大致的实现思路和代码如下：\n\n思路一：API < 18，启动前台Service时直接传入new Notification()；\n\n思路二：API >= 18，同时启动两个id相同的前台Service，然后再将后启动的Service做stop处理\n\n熟悉Android系统的童鞋都知道，系统出于体验和性能上的考虑，app在退到后台时系统并不会真正的kill掉这个进程，而是将其缓存起来。打开的应用越多，后台缓存的进程也越多。在系统内存不足的情况下，系统开始依据自身的一套进程回收机制来判断要kill掉哪些进程，以腾出内存来供给需要的app。这套杀进程回收内存的机制就叫 Low Memory Killer ，它是基于Linux内核的 OOM Killer（Out-Of-Memory killer）机制诞生。\n\n进程的重要性，划分5级：\n\n前台进程 (Foreground process)\n\n可见进程 (Visible process)\n\n服务进程 (Service process)\n\n后台进程 (Background process)\n\n空进程 (Empty process)\n\n了解完 Low Memory Killer，再科普一下oom_adj。什么是oom_adj？它是linux内核分配给每个系统进程的一个值，代表进程的优先级，进程回收机制就是根据这个优先级来决定是否进行回收。对于oom_adj的作用，你只需要记住以下几点即可：\n\n进程的oom_adj越大，表示此进程优先级越低，越容易被杀回收；越小，表示进程优先级越高，越不容易被杀回收\n\n普通app进程的oom_adj>=0,系统进程的oom_adj才可能<0\n\n有些手机厂商把这些知名的app放入了自己的白名单中，保证了进程不死来提高用户体验（如微信、QQ、陌陌都在小米的白名单中）。如果从白名单中移除，他们终究还是和普通app一样躲避不了被杀的命运，为了尽量避免被杀，还是老老实实去做好优化工作吧。\n\n所以，进程保活的根本方案终究还是回到了性能优化上，进程永生不死终究是个彻头彻尾的伪命题！\n\n作者：xiangzhizhong\n链接：https://juejin.im/post/5b4617866fb9a04f8d6ba5ce\n来源：掘金\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[4643,4643],[5827,5827]]],[1555393585924,["poul@pouldeMBP.lan",[[-1,5719,"作者：xiangzhizhong\n链接：https://juejin.im/post/5b4617866fb9a04f8d6ba5ce\n来源：掘金\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n"]],[5718,5827],[5718,5718]]],[1555393586154,["poul@pouldeMBP.lan",[[-1,5719,"\n"]],[5718,5718],[5717,5717]]],[1555393601110,["poul@pouldeMBP.lan",[[-1,4850,"\n"]],[4850,4850],[4849,4849]]],[1555393605514,["poul@pouldeMBP.lan",[[1,4850,"- "]],[4850,4850],[4852,4852]]],[1555393607552,["poul@pouldeMBP.lan",[[-1,4901,"\n"]],[4901,4901],[4900,4900]]],[1555393610724,["poul@pouldeMBP.lan",[[1,4901,"- "]],[4901,4901],[4903,4903]]],[1555393617434,["poul@pouldeMBP.lan",[[-1,4962,"熟悉Android系统的童鞋都知道，"]],[4962,4980],[4962,4962]]],[1555393617871,["poul@pouldeMBP.lan",[[-1,4961,"\n"]],[4962,4962],[4961,4961]]],[1555393621883,["poul@pouldeMBP.lan",[[1,4961,"    "]],[4961,4961],[4965,4965]]],[1555393636963,["poul@pouldeMBP.lan",[[-1,4961,"    "]],[4965,4965],[4961,4961]]],[1555393652657,["poul@pouldeMBP.lan",[[1,4961,"\n"]],[4961,4961],[4962,4962]]],[1555393674100,["poul@pouldeMBP.lan",[[-1,5188,"\n"]],[5188,5188],[5187,5187]]],[1555393676203,["poul@pouldeMBP.lan",[[1,5188,"- "]],[5188,5188],[5190,5190]]],[1555393684983,["poul@pouldeMBP.lan",[[-1,5216,"\n"]],[5216,5216],[5215,5215]]],[1555393687598,["poul@pouldeMBP.lan",[[1,5216,"- "]],[5216,5216],[5218,5218]]],[1555393689868,["poul@pouldeMBP.lan",[[-1,5241,"\n"]],[5241,5241],[5240,5240]]],[1555393691657,["poul@pouldeMBP.lan",[[1,5241,"- "]],[5241,5241],[5243,5243]]],[1555393693334,["poul@pouldeMBP.lan",[[-1,5266,"\n"]],[5266,5266],[5265,5265]]],[1555393695169,["poul@pouldeMBP.lan",[[1,5266,"- "]],[5266,5266],[5268,5268]]],[1555393697256,["poul@pouldeMBP.lan",[[-1,5294,"\n"]],[5294,5294],[5293,5293]]],[1555393700148,["poul@pouldeMBP.lan",[[1,5294,"- "]],[5294,5294],[5296,5296]]],[1555393706846,["poul@pouldeMBP.lan",[[1,5347,"、"]],[5347,5347],[5348,5348]]],[1555393708140,["poul@pouldeMBP.lan",[[-1,5347,"、"]],[5348,5348],[5347,5347]]],[1555393708499,["poul@pouldeMBP.lan",[[1,5347,"\\"]],[5347,5347],[5348,5348]]],[1555393709296,["poul@pouldeMBP.lan",[[-1,5347,"\\"]],[5348,5348],[5347,5347]]],[1555393710636,["poul@pouldeMBP.lan",[[1,5348,"\\"]],[5348,5348],[5349,5349]]],[1555393713334,["poul@pouldeMBP.lan",[[1,5347,"\\"]],[5347,5347],[5348,5348]]],[1555393714639,["poul@pouldeMBP.lan",[[-1,5349,"\\"]],[5350,5350],[5349,5349]]],[1555393717563,["poul@pouldeMBP.lan",[[-1,5347,"\\"]],[5348,5348],[5347,5347]]],[1555393737664,["poul@pouldeMBP.lan",[[1,5358,"\\"]],[5358,5358],[5359,5359]]],[1555393741486,["poul@pouldeMBP.lan",[[1,5347,"\\"]],[5347,5347],[5348,5348]]],[1555393743641,["poul@pouldeMBP.lan",[[-1,5347,"\\"]],[5348,5348],[5347,5347]]],[1555393744276,["poul@pouldeMBP.lan",[[1,5347,"\\\\"]],[5347,5347],[5349,5349]]],[1555393745442,["poul@pouldeMBP.lan",[[-1,5347,"\\\\"]],[5349,5349],[5347,5347]]],[1555393748768,["poul@pouldeMBP.lan",[[-1,5358,"\\"]],[5359,5359],[5358,5358]]]],null,"poul@pouldeMBP.lan"]]}